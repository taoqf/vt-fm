<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <controls:IconToImageConverter x:Key="IconToImageConverter"/>
    <controls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <controls:CheckboxBoolConverter x:Key="CheckboxBoolConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <controls:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"  Value="Center" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="grid"
                                    Property="Background"
                                    Value="{DynamicResource SkinColor}" />

                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="grid"
                                    Property="Background"
                                    Value="{DynamicResource SkinColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BtnDisableForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--消息提示框样式开始-->
    <Style TargetType="{x:Type controls:VicMessageBoxNormal}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SkinColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicMessageBoxNormal}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"   CornerRadius="0">
                        <Grid Name="gridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Name="brTitle" Grid.Row="0" Background="{DynamicResource WindowBackground}">
                                <Grid Name="gridTitle" Style="{DynamicResource loginMainGridStyle}" >
                                    <Label Name="lblTitle"  HorizontalAlignment="Left"  Margin="10,0,0,0" VerticalAlignment="Center" FontSize="16px" Content="{TemplateBinding Title}" FontWeight="Bold" Foreground="{DynamicResource MsgBoxTitleColor}"/>
                                    <controls:VicButtonNormal x:Name="btnClose"  HorizontalAlignment="Right" Style="{DynamicResource WindowButtonStyle}"  VerticalAlignment="Top" Height="34" Width="34" FocusVisualStyle="{x:Null}" ToolTip="关闭">
                                        <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" SnapsToDevicePixels="True" Fill="{DynamicResource WinCloseForeground}" />
                                    </controls:VicButtonNormal>
                                </Grid>
                            </Border>
                            <Grid  Grid.Row="1" Background="{DynamicResource SkinColor}"/>
                            <Grid Name="gridBody" Grid.Row="2" Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image VerticalAlignment="Center" Margin="10,0,10,0" Width="32" Height="32" Source="{TemplateBinding Icon,Converter={StaticResource IconToImageConverter}}"></Image>
                                <TextBlock Text="{TemplateBinding Message}" VerticalAlignment="Center" Grid.Column="1" Margin="10" TextTrimming="None"
                                   Foreground="{TemplateBinding Foreground}"
                                   TextWrapping="WrapWithOverflow"
                                   FontSize="{TemplateBinding FontSize}" />
                            </Grid>
                            <Border Name="brBtn" BorderThickness="0" Grid.Row="3" Background="White">
                                <Grid Name="gridBtn">
                                    <ItemsControl Name="butt" Margin="2" ItemsSource="{TemplateBinding CtrlButtonCollection}"  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,0,5,0">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Rows="1"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="Button">
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Height" Value="30"></Setter>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource SkinBorderBrush}"></Setter>
                                                <Setter Property="BorderThickness" Value="1"></Setter>
                                                <Setter Property="Width" Value="80"></Setter>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="{DynamicResource SkinForeground}"/>
                                                <Setter Property="FontSize" Value="13" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource SkinColor}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource MsgBoxBtnOverForeground}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource SkinColor}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource MsgBoxBtnOverForeground}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--消息提示框样式结束-->
    
    <!--VicCheckBox样式开始-->
    <!--VicCheckBox 无内容时 焦点聚焦状态下的虚线框样式（左侧方框部分）-->
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicCheckBox 有内容时 焦点聚焦状态下的虚线框样式（右侧文字部分）-->
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="20,0,0,0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicCheckBoxNormal}">
        <Setter Property="Foreground" Value="{DynamicResource SkinForeground}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicCheckBoxNormal}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Width="20" Height="20">
                                <Path Width="12" Height="12" x:Name="Check" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"
            Data="M 0 6 L 6 11 L 11 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BtnDisableForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Check" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Check" Property="Data" Value="M 0 6 L 12 6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SkinColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicCheckBox样式结束-->

    <!--VicComboBoxNormal样式开始-->
    <Style x:Key="MonitorComboBoxCheck" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="{TemplateBinding Background }"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid" Width="22"  HorizontalAlignment="Right">
                            <Path x:Name="path"  Width="12" Height="12"  Stroke="Black" StrokeThickness="2"   Data="M 0 6 L 6 11 L 11 0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="path" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="path" Property="Data" Value="M 0 6 L 12 6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="path" Property="Stroke" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MonitorComboBoxCheck2" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="{TemplateBinding Background }"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid" Width="22"  HorizontalAlignment="Right">
                            <Path x:Name="path"  Width="12" Height="12"  Stroke="Black" StrokeThickness="2"   Data="M 0 6 L 6 11 L 11 0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="path" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="path" Property="Data" Value="M 0 6 L 12 6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="path" Property="Stroke" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxCheck" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="{TemplateBinding Background }"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid" Width="22"  HorizontalAlignment="Right">
                            <Path x:Name="path" Data="{DynamicResource DownArrowGeometry}" Fill="Gray" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                            <Setter TargetName="path" Property="Fill" Value="{DynamicResource SkinColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="path" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicComboBoxNormal}">
        <Setter Property="Foreground" Value="{DynamicResource SkinForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicComboBoxNormal}">
                    <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource SkinBorderBrush}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer CanContentScroll="true">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                            <TextBox x:Name="PART_EditableTextBox"   Grid.Column="0"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{DynamicResource ComboBoxEditableTextBox}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <ContentPresenter x:Name="ContentSite"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <CheckBox Grid.Column="1" Width="23"  HorizontalAlignment="Right" Margin="0"  Visibility="{TemplateBinding HideDropDownToggle,Converter={StaticResource BoolToVisibilityConverter}}"  Style="{DynamicResource ComboBoxCheck}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="120"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}"/>
                            <Setter Property="Background" Value="{DynamicResource BtnDisableBackground}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="IsEnabled"  Value="True"    TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden"  TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicComboBoxNormal样式结束-->

    <!--VicTextBoxNormal样式开始-->
    <Style   TargetType="{x:Type controls:VicTextBoxNormal}">
        <Setter Property="BorderBrush" Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTextBoxNormal}">
                    <Border Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid    Height="{TemplateBinding Height}"  MinWidth="{TemplateBinding MinWidth}"  Background="{DynamicResource brushWatermarkBackground}"  >
                            <TextBlock  Text="{TemplateBinding WaterMark}"  Foreground="{DynamicResource brushWatermarkForeground}"  VerticalAlignment="Center" 
                               Visibility="{Binding ElementName=txtUserEntry, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBox x:Name="txtUserEntry" AcceptsReturn="{TemplateBinding AcceptsReturn}" TextWrapping="{TemplateBinding TextWrapping}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" TextAlignment="{TemplateBinding TextAlignment}"  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"  HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" BorderThickness="0" Background="{TemplateBinding Background}" Text="{TemplateBinding VicText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource BtnDisableBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BtnDisableForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicTextBoxNormal样式结束-->

    <!--VicNumericUpDown样式开始-->
    <Style x:Key="RepeatButtonButtonStyle"  TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource CheckBoxFillNormal}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type RepeatButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                               />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SkinColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:VicNumericUpDown}">
        <Setter Property="BorderThickness"  Value="1" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush"  Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth"  Value="20" />
        <!--<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicNumericUpDown}">

                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"        Background="{TemplateBinding Background}" >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                <ColumnDefinition x:Name="UpDownButtonsColumn" Width="23"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_TextBox"
                                     Grid.Column="0"
                                     MinWidth="20"
                                     HorizontalContentAlignment="Right"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"                                       
                                     BorderThickness="0"   
                                     Background="Transparent" 
                                     HorizontalScrollBarVisibility="Auto"
                                     VerticalScrollBarVisibility="Auto"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"/>
                            <!-- BorderThickness="0"  不能少，不然出现凹框-->
                            <Grid   Grid.Column="1" Background="{DynamicResource CheckBoxFillNormal}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="PART_NumericUpColumn"/>
                                    <RowDefinition x:Name="PART_NumericDownColumn"/>
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="PART_NumericUp"
                                          Delay="{TemplateBinding Delay}"
                                        Style="{StaticResource RepeatButtonButtonStyle}"
                                          IsTabStop="False">
                                    <Path x:Name="PolygonUp" Fill="Gray"  Data="M 0 4 L 3.5 0 L 7 4 Z" />
                                </RepeatButton>
                                <RepeatButton x:Name="PART_NumericDown"
                                          Grid.Row="1"                  
                                          Delay="{TemplateBinding Delay}"
                                        Style="{StaticResource RepeatButtonButtonStyle}"
                                          IsTabStop="False">
                                    <Path x:Name="PolygonDown" Fill="Gray" Data="M 0 0 L 3.5 4 L 7 0 Z" />
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="InterceptArrowKeys"
                                    Value="False" />
                            <Setter Property="InterceptMouseWheel"
                                    Value="False" />
                            <Setter Property="InterceptManualEnter"
                                    Value="False" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" SourceName="PART_TextBox" >
                            <Setter Property="Background" TargetName="PART_TextBox" Value="White"/>
                        </Trigger>
                        <Trigger Property="HideUpDownButtons"   Value="True">
                            <Setter TargetName="PART_NumericUp"      Property="Visibility"   Value="Collapsed" />
                            <Setter TargetName="PART_NumericDown"    Property="Visibility"   Value="Collapsed" />
                            <Setter TargetName="UpDownButtonsColumn" Property="Width"        Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicNumericUpDown样式结束-->
    <!--VicDatePickerNormal样式开始-->
    <Style TargetType="{x:Type controls:VicDatePickerNormal}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Background" Value="{DynamicResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush"   Value="{DynamicResource SkinBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate  ControlTemplate.TargetType="{x:Type controls:VicDatePickerNormal}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox  Name="textBox"  Grid.Column="0" BorderThickness="0" Background="White" />
                            <TextBlock  x:Name="textBlock"  Grid.Column="1" Width="23"  Background="{DynamicResource CheckBoxFillNormal}"   HorizontalAlignment="Right"  >   
                                <Path  Data="M 0 0 L 3.5 4 L 7 0 Z" Fill="Gray"  Margin="8"/>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HideButton" Value="True">
                            <Setter TargetName="textBlock" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="textBlock" Property="Background" Value="{DynamicResource SkinColor}" />
                    </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicDatePickerNormal样式结束-->
    <!--VicTextBox样式开始-->
    <Style x:Key="VicButtonToBox"  TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background"      Value="{DynamicResource CheckBoxFillNormal}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <!--按钮内容-->
                        <ContentPresenter x:Name="content" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding  Content}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicTextBox}">
        <Setter Property="MinWidth"        Value="40" />
        <Setter Property="BorderBrush"     Value="{DynamicResource SkinBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"      Value="White"/>
        <Setter Property="IsReadOnly"      Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTextBox}">
                    <Border  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_Input" Grid.Column="0" BorderBrush="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" Background="{TemplateBinding Background}"/>
                            <Button x:Name="PART_Open" Grid.Column="1" Style="{StaticResource VicButtonToBox}" Width="23" Content="...."   Padding="0,0,0,8"  Foreground="Gray"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HideDataRefButton" Value="true">
                            <Setter TargetName="PART_Open" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_Open" Property="Background" Value="{DynamicResource SkinColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicTextBox样式结束-->
    <!--机台“数据清单”页签内容竖排样式开始-->
    <Style x:Key="MachinePlatforBtnStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="MinHeight" Value="105"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Plugin_TabItemNormalBorderBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  x:Name="Bd"
                                        CornerRadius="4,0,0,4"
										BorderThickness="1,1,0,1"
										Margin="0,1,0,0"
                                        Background="{DynamicResource Plugin_TabItemNormalBackground}"
                                        BorderBrush="{DynamicResource Plugin_TabItemNormalBorderBrush}"
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid  Name="grid">
                            <Path x:Name="path" Fill="{DynamicResource Plugin_TabItemShapeNormalBackground}" Stroke="{DynamicResource Plugin_TabItemShapeNormalBorderBrush}" Data="M-0.89510486,30.047619 L-0.29370627,0.5 79.692308,0.5 79.692308,34.5 44.811188,34.56746 z" Stretch="Fill"/>
                            <TextBlock x:Name="cc"  Width="13" TextWrapping="Wrap" TextBlock.FontFamily="Calibri" TextAlignment="Center" TextBlock.FontSize="14" Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Plugin_TabItemSelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Plugin_TabItemSelectedBorderBrush}"/>
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource Plugin_TabItemShapeSelectedBackground}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource Plugin_TabItemShapeSelectedBorderBrush}"/>
                            <Setter Property="Foreground" TargetName="cc" Value="{DynamicResource Plugin_TabItemSelectedForeground}"/>
                            <Setter Property="Margin" TargetName="Bd" Value="0,1,-1,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Plugin_TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Plugin_TabItemDisabledBorderBrush}"/>
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource Plugin_TabItemDisabledBackground}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource Plugin_TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" TargetName="cc" Value="{DynamicResource BtnDisableForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--机台“数据清单”页签内容竖排样式结束-->
    <!--机台“数据清单”页签内容横排样式开始-->
    <Style x:Key="MachinePlatforTopBtnStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MinWidth" Value="105"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border  x:Name="Bd"
                                        CornerRadius="4,4,0,0"
                                        Background="{DynamicResource Plugin_TabItemNormalBackground}"
                                        BorderBrush="{DynamicResource Plugin_TabItemNormalBorderBrush}"
                                        BorderThickness="1,1,1,0"
										Margin="1,0,0,0"
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid  Name="grid">
                            <Path x:Name="path" Fill="{DynamicResource Plugin_TabItemShapeNormalBackground}" Stroke="{DynamicResource Plugin_TabItemShapeNormalBorderBrush}" Data="M-0.89510486,30.047619 L-0.29370627,0.5 79.692308,0.5 79.692308,34.5 44.811188,34.56746 z" Stretch="Fill"/>
                            <TextBlock x:Name="cc" Height="14"  TextWrapping="Wrap" TextBlock.FontFamily="Calibri" TextAlignment="Center" TextBlock.FontSize="14" Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Plugin_TabItemSelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Plugin_TabItemSelectedBorderBrush}"/>
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource Plugin_TabItemShapeSelectedBackground}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource Plugin_TabItemShapeSelectedBorderBrush}"/>
                            <Setter Property="Foreground" TargetName="cc" Value="{DynamicResource Plugin_TabItemSelectedForeground}"/>
                            <Setter Property="Margin" TargetName="Bd" Value="1,0,0,-1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Plugin_TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Plugin_TabItemDisabledBorderBrush}"/>
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource Plugin_TabItemDisabledBackground}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource Plugin_TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" TargetName="cc" Value="{DynamicResource BtnDisableForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--机台“数据清单”页签内容横排样式结束-->
<!--数据建模相关样式开始-->
    <Style x:Key="DelBtnStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="back" Background="{DynamicResource SkinColor}" CornerRadius="30" BorderThickness="0" Margin="0,0,10,0">
                        <Line X1="0" X2="10" Y1="0" Y2="0" Stroke="White" StrokeThickness="3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddBtnStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="back" Background="{DynamicResource SkinColor}" CornerRadius="30" BorderThickness="0" Margin="0,0,10,0">
                        <Grid>
                            <Line X1="0" X2="10" Y1="0" Y2="0" Stroke="White" StrokeThickness="3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Line X1="0" X2="0" Y1="0" Y2="12" Stroke="White" StrokeThickness="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0,0,0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--数据建模相关样式结束-->
</ResourceDictionary>