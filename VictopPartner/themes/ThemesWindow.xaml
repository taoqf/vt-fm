<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
                    xmlns:converters="clr-namespace:VictopPartner">

    <converters:VisibilityConverter x:Key="visibilityConverter"/>
    <converters:VisibilityConverterEx x:Key="visibilityConverterEx"></converters:VisibilityConverterEx>
    <converters:ColorConverterEx x:Key="colorConverter"></converters:ColorConverterEx>
    <Style x:Key="WindowChangeSkinBackground" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>

    </Style> 

    <Style x:Key="WindowChangeSkinTitleBackGround" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
    </Style> 

    <Style  x:Key="RadioButtonListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                    <Setter Property="Margin"  Value="10,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                                    <Border Name="border" BorderBrush="{Binding StateType, Converter={StaticResource colorConverter}}" CornerRadius="5" BorderThickness="3" Height="122" Width="205">
                                        <Border.Background>
                                            <ImageBrush  ImageSource="{Binding SkinFace}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <StackPanel x:Name="stackPanel" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <controls:VicButtonNormal  x:Name="btnLocaUse" Visibility="{Binding StateType, Converter={StaticResource visibilityConverter}}" Content="应用" Width="75" Height="25"
                                             Command="{Binding DataContext.btnUseCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}" />
                                            <Button x:Name="btnLocaAccomplish" Visibility="{Binding StateType, Converter={StaticResource visibilityConverterEx}}" Style="{DynamicResource btnStyle}"
                                                     Content="完成" Width="25" Height="25"></Button>
                                        </StackPanel>
                                    
                                    </Border>
                                    <TextBlock Text="{Binding SkinName}" MinWidth="60" MinHeight="30" TextAlignment="Center"/>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true" >
                                        <Setter Property="Opacity" TargetName="stackPanel" Value="1"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true" >
                                       
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--在线皮肤样式开始-->

    <Style  TargetType="{x:Type ProgressBar}" x:Key="progressBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="6" MinWidth="100" >
                        <Border Name="PART_Track" CornerRadius="3" BorderBrush="#707070"  
                           BorderThickness="1" Background="#C9C9C9" Opacity="0.9"/>
                        <Border x:Name="PART_Indicator" Height="5"  CornerRadius="3" BorderBrush="White"  BorderThickness="3"   
                         HorizontalAlignment="Left" >
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property ="IsOpen" Value="False"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property ="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="errorBorder" BorderThickness="1" CornerRadius="8" BorderBrush="Yellow" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="50">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius ="4" ShadowDepth="0"/>
                        </Border.Effect>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="textBlock" Text="{TemplateBinding Content }"  FontSize="14"  TextWrapping="Wrap" Foreground="White"/>
                    </Border>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property ="IsOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:3">
                                <DiscreteObjectKeyFrame KeyTime ="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility >
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame KeyTime ="0:0:3">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Hidden</Visibility >
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="MinWidth" Value="30"></Setter>
        <Setter Property="Height" Value="31"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="Yellow" CornerRadius="20" Width="25" Height="25">
                        <Path Fill="{DynamicResource SkinColor}" HorizontalAlignment="Center" 
                                                  StrokeThickness="0" 
                                                  VerticalAlignment="Top"  
                                                  Margin="8.383,10.541,0,0" 
                                                  Data="M0,0 L12,0 12,0.38199188 12.230031,0.36226721 12.913506,8.3330173 10.920817,8.5038862 10.363123,2 0,2 z" 
                                                  Height="8.504" 
                                                  RenderTransformOrigin="0.464629838490983,0.117593290001535" 
                                                  Stretch="Fill" 
                                                  Width="12.914">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="135.502"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="RadioButtonOnLineListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Margin" Value="10,15"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="Storyboard1">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RangeBase.Value)" Storyboard.TargetName="progressBar">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <StackPanel Margin="2,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                                    <Border Name="border" BorderBrush="Transparent" Background="{DynamicResource DefaultSkin}" BorderThickness="1" Height="122" Width="203">
                                        <Border.ToolTip>
                                            <ToolTip Style="{DynamicResource ToolTipStyle}" Content="{Binding OnLineName}"></ToolTip>
                                        </Border.ToolTip>
                                        <Grid Height="122" Width="203">
                                            <Grid.Background>
                                                <ImageBrush ImageSource="{Binding OnLinePreview}" Stretch="UniformToFill"/>
                                            </Grid.Background>

                                            <StackPanel Name="borderSelect" Opacity="0"  Background="Transparent"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <controls:VicButtonNormal  Width="75" Tag="{Binding StateChange}" Height="25" x:Name="btnDown" Content="下载"
                                                                      Command="{Binding DataContext.btnOnLineDownloadCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}">
                                            </controls:VicButtonNormal>
                                                <controls:VicButtonNormal Tag="{Binding StateChange}" x:Name="btnUpdate" Content="更新" Width="75" Height="25"
                                             Command="{Binding DataContext.btnOnLineUpdateCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}" />
                                                <controls:VicButtonNormal Tag="{Binding StateChange}" x:Name="btnUse" Content="应用" Width="75" Height="25"
                                             Command="{Binding DataContext.btnOnLineUseCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}" />
                                                <Button Name="btnAccomplish" Tag="{Binding StateChange}" Style="{DynamicResource btnStyle}" Command="{Binding DataContext.btnOnLineUseCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}" Content="完成" Width="25" Height="25"></Button>
                                        </StackPanel>
                                        </Grid>
                                    </Border>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"  Value="True" >
                                        <Setter Property="BorderBrush" Value="Yellow" TargetName="border"/>
                                        <Setter Property="BorderThickness" Value="3" TargetName="border"/>
                                        <Setter Property="CornerRadius" Value="5" TargetName="border"></Setter>
                                        <Setter Property="Opacity" TargetName="borderSelect"  Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true" >
                                        <Setter Property="BorderBrush" TargetName="border"  Value="Yellow"/>
                                        <Setter Property="BorderThickness" Value="3" TargetName="border"/>
                                        <Setter Property="CornerRadius" Value="5" TargetName="border"></Setter>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding ElementName=btnDown,Path=Tag}" Value="1">
                                        <Setter TargetName="btnDown" Property="Visibility" Value="Visible"></Setter>
                                        <Setter TargetName="btnUse" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnAccomplish" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnUpdate" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=btnUse,Path=Tag}" Value="2">
                                        <Setter TargetName="btnUse" Property="Visibility" Value="Visible"></Setter>
                                        <Setter TargetName="btnDown" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnAccomplish" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnUpdate" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=btnAccomplish,Path=Tag}" Value="3">
                                        <Setter TargetName="btnAccomplish" Property="Visibility" Value="Visible"></Setter>
                                        <Setter TargetName="btnDown" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnUse" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnUpdate" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=btnAccomplish,Path=Tag}" Value="4">
                                        <Setter TargetName="btnUpdate" Property="Visibility" Value="Visible"></Setter>
                                        <Setter TargetName="btnAccomplish" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnDown" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="btnUse" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="OnLineCategoryListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Margin"  Value="2"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"  CornerRadius="5,5,5,5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter  Content="{Binding Category_Name}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60" Height="20"/>
                                    <!--<controls:VicButtonNormal BorderBrush="Transparent" BorderThickness="0" Content="{Binding Category_Name}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60" Height="20"></controls:VicButtonNormal>-->
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource SkinColor}" TargetName="Bd"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource SkinColor}" TargetName="Bd"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--在线皮肤样式结束-->
    <!--壁纸样式控制开始-->
    <Style  x:Key="RadioButtonWallPaperListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Margin"  Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                                    <Border Name="border" BorderBrush="Yellow"  CornerRadius="5" BorderThickness="3" Height="122" Width="203">
                                        <Border.ToolTip>
                                            <ToolTip Style="{DynamicResource ToolTipStyle}" Content="{Binding WllPaperName}"/>
                                        </Border.ToolTip>
                                        <Image Source="{Binding WallPreview}" Stretch="UniformToFill"></Image>
                                    </Border>
                                    <controls:VicButtonNormal  Grid.Row="1"   Name="downLoadRun" BorderThickness="0"  Content="下 载" HorizontalAlignment="Center" FontSize="12" MinWidth="60" MinHeight="30"
                                                         VerticalAlignment="Center"
                                                         Command="{Binding DataContext.btnDownLoadCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                                                         CommandParameter="{Binding .}"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--壁纸样式控制结束-->
    <!--壁纸分类样式控制开始-->
    <Style  x:Key="RadioButtonWallPaperCategoryListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"   Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <WrapPanel Margin="30,0,0,0" Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" Margin="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="True">
                                    <!--<ContentPresenter  Content="{Binding Category_Name}" Width="40"  VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                                    <Label Content="{Binding Category_Name}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="50" Height="25" VerticalAlignment="Center"></Label>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource SkinColor}" TargetName="Bd"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource SkinColor}" TargetName="Bd"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--本地皮肤分屏左右按钮样式开始-->
    <Style x:Key="PageStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="/VictopPartner;component/Fonts/#iconfont"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource  SkinColor}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="PART_Border"   BorderThickness="0"  Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <!--<Path Grid.Row="1" Data="M148,185 C172.5,165.83333 219.5,130.5 221.5,127.5 223.5,124.5 226.83333,132.16667 229.5,134.5 L191.5,186.5 228.5,239.5 220.5,244.5 145.5,188.5" Fill="{DynamicResource SkinColor}"  HorizontalAlignment="Left" Height="30"  Stretch="Fill" Stroke="{DynamicResource SkinColor}" VerticalAlignment="Top" Width="20" />-->
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--本地皮肤分屏左右按钮样式结束-->
    <Style x:Key="ThemeButtonStyle1" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1">
                        <Border x:Name="Bd" Width="100" CornerRadius="10,10,0,0" Height="30" BorderBrush="#FFFDDA" BorderThickness="1"  Background="#FFFDDA">
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TabItemHotBackground}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="10,10,0,0"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="10,10,0,0"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThemeButtonStyle" TargetType="{x:Type controls:VicRadioButtonRectangle}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicRadioButtonRectangle}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1">
                        <Border x:Name="Bd" Width="100" CornerRadius="10,10,0,0" Height="35" BorderBrush="#FFFDDA" BorderThickness="1"  Background="#FFFDDA">
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TabItemHotBackground}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="10,10,0,0"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="10,10,0,0"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="CornerRadius" TargetName="Bd" Value="10,10,0,0"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource SkinColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <!--<ControlTemplate TargetType="{x:Type controls:VicRadioButtonRectangle}">
                        <Border x:Name="border"  
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter  Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Label Grid.Column="1" Foreground="White" FontSize="10" Padding="3"  HorizontalContentAlignment="Right" VerticalContentAlignment="Top"  Content="{TemplateBinding RadioButtonRectangleNum}"/>
                            </Grid>
                        </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="WhiteSmoke" />
                            <Setter Property="Foreground" Value="#FFFFFF"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#174c73" />
                            <Setter  Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="WhiteSmoke" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>-->
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>