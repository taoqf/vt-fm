<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
              xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Name="userControl" 
             x:Class="MetroFramePlugin.Views.CalendarEx" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Width="350" Height="300" Loaded="UserControl_Loaded" Background="#FFF0F7FB">
    <UserControl.Resources>
        <Style x:Key="ComboBoxFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="4,4,21,4"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#F3F3F3" Offset="0"/>
        	<GradientStop Color="#EBEBEB" Offset="0.5"/>
        	<GradientStop Color="#DDDDDD" Offset="0.5"/>
        	<GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" Width="Auto"/>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        	<GradientStop Color="#ABADB3" Offset="0.05"/>
        	<GradientStop Color="#E2E3EA" Offset="0.07"/>
        	<GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="MinWidth" Value="0"/>
        	<Setter Property="MinHeight" Value="0"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        					<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
        				</Themes:ButtonChrome>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        	<Grid x:Name="Placement" SnapsToDevicePixels="true">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="Auto"/>
        		</Grid.ColumnDefinitions>
        		<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        			<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
        				<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        					<ScrollViewer x:Name="DropDownScrollViewer">
        						<Grid RenderOptions.ClearTypeHint="Enabled">
        							<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        								<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
        							</Canvas>
        							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</Grid>
        					</ScrollViewer>
        				</Border>
        			</Themes:SystemDropShadowChrome>
        		</Popup>
        		<Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
        		<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        		<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
        	</Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="true">
                    <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    <Setter Property="Background" Value="#FFF4F4F4"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="Padding" Value="4,3"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBox}">
        				<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*"/>
        						<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        					</Grid.ColumnDefinitions>
        					<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        						<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
        							<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        								<ScrollViewer x:Name="DropDownScrollViewer">
        									<Grid RenderOptions.ClearTypeHint="Enabled">
        										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0" Background="{x:Null}">
        											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Stroke="{x:Null}"/>
        										</Canvas>
        										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Opacity="1"/>
        									</Grid>
        								</ScrollViewer>
        							</Border>
        						</Themes:SystemDropShadowChrome>
        					</Popup>
        					<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Foreground="{TemplateBinding Foreground}"/>
        					<ContentPresenter TextBlock.Foreground="Black" x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="{x:Null}" Margin="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        						<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        						<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        					</Trigger>
        					<Trigger Property="HasItems" Value="false">
        						<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						<Setter Property="Background" Value="#FFF4F4F4"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsGrouping" Value="true"/>

        						</MultiTrigger.Conditions>
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</MultiTrigger>
        					<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        						<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        						<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxReadonlyToggleButton2" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true">
        					<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
        					</Grid>
        				</Themes:ButtonChrome>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="CBB_MonthStyle" TargetType="{x:Type ComboBox}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="Padding" Value="4,3"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ComboBox}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="OnMouseLeftButtonDown1"/>
        				</ControlTemplate.Resources>
        				<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
        					<Grid.ColumnDefinitions>

        						<ColumnDefinition Width="*"/>
        						<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>

        					</Grid.ColumnDefinitions>
        					<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Grid.Column="0">
        						<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
        							<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        								<ScrollViewer x:Name="DropDownScrollViewer">
        									<Grid RenderOptions.ClearTypeHint="Enabled">
        										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
        										</Canvas>
        										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        									</Grid>
        								</ScrollViewer>
        							</Border>
        						</Themes:SystemDropShadowChrome>
        					</Popup>
        					<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ToggleButtonStyle1}" Grid.Column="0"/>
        					<ContentPresenter TextBlock.Foreground="Black" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="0" Visibility="Visible" Grid.ColumnSpan="2" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        						<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        						<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        					</Trigger>
        					<Trigger Property="HasItems" Value="false">
        						<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						<Setter Property="Background" Value="#FFF4F4F4"/>
        					</Trigger>
        					<Trigger Property="IsGrouping" Value="true">
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</Trigger>
        					<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        						<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        						<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" Width="Auto"/>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
        	<Grid Cursor="Hand">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="Normal"/>
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Disabled">
        					<Storyboard>
        						<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
        					</Storyboard>
        				</VisualState>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>
        		<Grid>
        			<Path x:Name="path" Data="M288.75,232.25 L288.75,240.625 L283,236.625 z" Fill="#FF333333" HorizontalAlignment="Left" Height="10" Margin="14,-6,0,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
        		</Grid>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
        	<Grid Cursor="Hand">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="Normal"/>
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Disabled">
        					<Storyboard>
        						<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
        					</Storyboard>
        				</VisualState>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>
        		<Grid>
        			<Path x:Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z" Fill="#FF333333" HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
        		</Grid>
        	</Grid>
        </ControlTemplate>
        <Style x:Key="ButtonFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="PART_PreviousButton" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid Cursor="Hand" Margin="0">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
        										<EasingColorKeyFrame KeyTime="0" Value="White"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled"/>
        							<VisualState x:Name="Pressed"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle Opacity="1" Stretch="Fill" Stroke="Black" StrokeThickness="0" Fill="{TemplateBinding Background}"/>
        					<Grid>
        						<Path x:Name="path" Data="M282.875,231.875L282.875,240.375 288.625,236z" Fill="Black" HorizontalAlignment="Center" Height="13" Stretch="Fill" VerticalAlignment="Center" Width="8" Visibility="Visible" Margin="0" RenderTransformOrigin="0.5,0.5">
        							<Path.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform Angle="-180"/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Path.RenderTransform>
        						</Path>
        					</Grid>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="PART_NextButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid Cursor="Hand" Margin="0">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0"/>
        					<Grid>
        						<Path x:Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z" Fill="Black" HorizontalAlignment="Center" Height="13" Margin="0" Stretch="Fill" VerticalAlignment="Center" Width="8"/>
        					</Grid>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Background="{TemplateBinding Background}">
        					<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Foreground" Value="#FF577DE2"/>
        						<Setter Property="Margin" TargetName="contentPresenter" Value="0"/>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="35"/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Grid x:Name="grid1">
			<!--<Grid.Background>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0"/>
					<GradientStop Color="#FF76B3DE" Offset="1"/>
				</LinearGradientBrush>
			</Grid.Background>-->
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100" />
				<ColumnDefinition  Width="112"/>
				<ColumnDefinition Width="150" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<StackPanel Height="35" VerticalAlignment="Top" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,0,0,0">
				<Button x:Name="PART_PreviousButton" Focusable="False" Height="26" Margin="0" Style="{DynamicResource PART_PreviousButton}" RenderTransformOrigin="5.5,1.077" VerticalAlignment="Center" Click="PART_PreviousButton_Click" Background="Transparent" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Left" Width="26" />
				<ComboBox x:Name="cbb_year" HorizontalAlignment="Left" Margin="0,10" VerticalAlignment="Center" Width="60.5" Background="Transparent" BorderThickness="0" SelectedIndex="0" IsSynchronizedWithCurrentItem="True" Height="26" FontSize="14" FontFamily="Microsoft YaHei" Style="{DynamicResource ComboBoxStyle}" Foreground="Black" BorderBrush="{x:Null}" Cursor="Hand"/>
				<!--<TextBlock TextWrapping="Wrap" Text="一" FontSize="17.333" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0"/>-->
				<ComboBox x:Name="cbb_month" HorizontalAlignment="Left" VerticalAlignment="Center" Width="35" BorderBrush="{x:Null}" Height="26" FontSize="14" Background="Transparent" Style="{DynamicResource CBB_MonthStyle}" MaxDropDownHeight="300" Foreground="Black" Cursor="Hand" Margin="0,10"/>
				<Button x:Name="PART_NextButton" Focusable="False" HorizontalAlignment="Left" Height="26"  Width="26" Margin="0" Style="{DynamicResource PART_NextButtonStyle}" VerticalAlignment="Center" Click="PART_NextButton_Click" Background="#FF0F71DC"/>
			</StackPanel>
			<Button x:Name="btn_today" Content="返回今天" Grid.Column="2" HorizontalAlignment="Center"   Margin="0" VerticalAlignment="Center" Width="75" Background="White" Height="26" FontSize="13.333" Style="{DynamicResource ButtonStyle}" Click="btn_today_Click" Foreground="Black" BorderBrush="{x:Null}"/>
		</Grid>
		<Grid x:Name="grid" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="34"/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Text="日"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="1" Text="一"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="2" Text="二"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="3" Text="三"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="4" Text="四"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="5" Text="五"/>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Grid.Column="6" Text="六"/>
		</Grid>
	</Grid>
</UserControl>
