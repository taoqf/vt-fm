<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:controls="clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
    xmlns:local="clr-namespace:Victop.Themes.WaterSkin"
                     xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    >

    <local:ImgeNameToImageUrlConverter x:Key="ImgeNameToImageUrlConverter"/>
    <SolidColorBrush x:Key="MenuForeColor" Color="White"/>
    <SolidColorBrush x:Key="WindowTitleAreaBackground" Color="#1A99D7"/>
    <SolidColorBrush  x:Key="TreeAreaBackground" Color="#ECF9FF"/>
    <SolidColorBrush   x:Key="SearchAreaBackground" Color="#E3F3FB"/>
    <SolidColorBrush x:Key="PagingAreaBackground" Color="#ECF9FF"/>
    <LinearGradientBrush x:Key="ToolBarAreaBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop  Color="#d1f0ff" Offset="0"/>
        <GradientStop Color="#b1e6ff" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ShadowWindow" TargetType="{x:Type Window}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Width" Value="965"/>
        <Setter Property="Height" Value="670"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/background.png" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid >
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    RadiusX="1" RadiusY="1">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"
                   BorderThickness="0"
                   Padding="{TemplateBinding Margin}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                   CornerRadius="0">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainFrmUserStackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="20,10,150,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="MainFrmUserPictrueGridStyle" TargetType="{x:Type controls:VicButtonImage}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\UserPictrue.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainFrmUserName" TargetType="{x:Type controls:VicTextBlockNormal}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,20,0"/>
    </Style>

    <Style x:Key="LeftGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Black"/>
    </Style>

    <Style x:Key="logoImage" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Source" Value="Images\logo.png"/>
    </Style>

    <Style x:Key="MainGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.5"></SolidColorBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="80,50,60,80"/>
    </Style>

    <Style x:Key="Line1" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image1" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\in.png"/>
    </Style>

    <Style x:Key="Line2" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image2" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\out.png"/>
    </Style>

    <Style x:Key="Line3" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image3" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\Grid.png"/>
    </Style>

    <Style x:Key="RightGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.6"></SolidColorBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectedFaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/indexSelected.png" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridTitle" TargetType="{x:Type controls:VicTextBlockNormal}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
    </Style>

    <Style x:Key="FaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/index.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Background" Value="#FFFFFE"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid样式开始-->
    <Style x:Key="scroll_thumb_style" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Width="18" Fill="White" >
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Ver_ScrollBar_style" TargetType="ScrollBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Width="22" Opacity="0.6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22" />
                            <RowDefinition />
                            <RowDefinition Height="22" />
                        </Grid.RowDefinitions>


                        <!--上按钮-->
                        <RepeatButton OverridesDefaultStyle ="True" BorderThickness="0" FocusVisualStyle="{x:Null}" Command="ScrollBar.LineUpCommand" Themes:ScrollChrome.ScrollGlyph="UpArrow" >
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Themes:ScrollChrome Name="Chrome" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                        <Border Grid.Row="1" Margin="0,1,0,1" Background="#33555555">
                            <Track HorizontalAlignment="Left" Name="PART_Track" Width="{TemplateBinding Width}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
Value="{TemplateBinding Value}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton OverridesDefaultStyle="True" Background="Transparent" Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton OverridesDefaultStyle="True" Background="Transparent" Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource scroll_thumb_style}" >
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                        <!--下按钮-->
                        <RepeatButton Grid.Row="2" FocusVisualStyle="{x:Null}" BorderThickness="0" Command="ScrollBar.LineDownCommand" OverridesDefaultStyle ="True" Themes:ScrollChrome.ScrollGlyph="DownArrow" >
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Themes:ScrollChrome Name="Chrome" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="hori_scroll_thumb_style" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Height="18" Fill="White" >
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Hori_ScrollBar_style" TargetType="ScrollBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Height="22" Opacity="0.6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="21" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="21" />
                        </Grid.ColumnDefinitions>


                        <!--左按钮-->
                        <RepeatButton OverridesDefaultStyle ="True" BorderThickness="0" FocusVisualStyle="{x:Null}" Command="ScrollBar.LineLeftCommand" Themes:ScrollChrome.ScrollGlyph="LeftArrow" >
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Themes:ScrollChrome Name="Chrome" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                        <Border Grid.Column="1" Margin="1,0,1,0" Background="#33555555">
                            <Track VerticalAlignment="Top" Name="PART_Track" Height="{TemplateBinding Height}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
Value="{TemplateBinding Value}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton OverridesDefaultStyle="True" Background="Transparent" Command="ScrollBar.PageLeftCommand" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton OverridesDefaultStyle="True" Background="Transparent" Command="ScrollBar.PageRightCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource hori_scroll_thumb_style}" >
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                        <!--右按钮-->
                        <RepeatButton Grid.Column="2" FocusVisualStyle="{x:Null}" BorderThickness="0" Command="ScrollBar.LineRightCommand" OverridesDefaultStyle ="True" Themes:ScrollChrome.ScrollGlyph="RightArrow" >
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Themes:ScrollChrome Name="Chrome" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle"  TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eceaea"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="LightGray"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="1"/>
        <!--调试心得：查找出来的数据集里面出现空行时，会错位，所以必须设置行头宽度个值-->
        <Setter Property="Background" Value="#e4f4fc"/>
    </Style>

    <Style TargetType="{x:Type controls:VicDataGrid}">
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="BorderBrush" Value="#d6c79b" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="AlternationCount" Value="2"></Setter>

        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"></Setter>
        <Setter Property="RowHeaderStyle" Value="{DynamicResource DataGridRowHeaderStyle}"></Setter>
        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{DynamicResource Ver_ScrollBar_style}" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{DynamicResource Hori_ScrollBar_style}" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.8"></SolidColorBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DataGrid样式结束-->

    <Style x:Key="btnMainFeedBackStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSetStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Themes:ButtonChrome x:Name="Chrome" >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条样式开始-->
    <SolidColorBrush x:Key="StandardBorderBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="NormalBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#d8e9f0" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
      StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0.0" />
                <GradientStop Color="White" Offset="0.6" />
                <GradientStop Color="#DDDDDD" Offset="1.2"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"
      StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush"
      StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{DynamicResource NormalBrush}"
          BorderBrush="{DynamicResource NormalBorderBrush}"
          BorderThickness="1">
                        <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
              Value="{DynamicResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
              Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
      TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
            <RepeatButton
      Grid.Row="0"
      Style="{DynamicResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{DynamicResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{DynamicResource HorizontalNormalBrush}"
          BorderBrush="{DynamicResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Row="3"
      Style="{DynamicResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
      TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
            <RepeatButton
      Grid.Column="0"
      Style="{DynamicResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{DynamicResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{DynamicResource NormalBrush}"
          BorderBrush="{DynamicResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Column="3"
      Style="{DynamicResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="MenuScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="11" />
                <Setter Property="Template"
            Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="9"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
            Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{DynamicResource MenuScrollBar}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{DynamicResource MenuScrollBar}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  Grid.Row="0"
            Grid.Column="1"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
           
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--滚动条样式结束-->

    <Style x:Key="btnStretchStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">

                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images\Stretch.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--登陆窗体开始-->
    <Style x:Key="loginWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderBrush" Value="#024672"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\messagebackground.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid x:Name="Root" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WindowStates">
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                            <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                            <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimationStates">
                                <VisualState x:Name="FirstPage">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[1].(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[0].(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SecondPage">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[0].(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[1].(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="FirstPage" To="SecondPage">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <PowerEase  EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <PowerEase EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[0].(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Content).Children[0].(UIElement.Opacity)" Storyboard.TargetName="WindowContentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[1].(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[1].(UIElement.Opacity)" >
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="SecondPage" To="FirstPage">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <PowerEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <PowerEase EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[1].(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Content).Children[1].(UIElement.Opacity)" Storyboard.TargetName="WindowContentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WindowContentPresenter" Storyboard.TargetProperty="(Content).Children[0].(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Content).Children[1].(UIElement.Opacity)" Storyboard.TargetName="WindowContentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Overlay" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}"/>
                        <Grid x:Name="ContentRoot" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform  />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                                <ContentPresenter x:Name="WindowContentPresenter" Content="{TemplateBinding Content}" 
										ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="loginTopGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#31527d"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="loginMainGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="loginMainUserPhotoGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\UserPhoto.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButtonStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Background" Value="#FAFAFA"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#31527D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#31527D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="btnLoginSetStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Themes:ButtonChrome x:Name="Chrome" >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images\LoginSet.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images\LoginSet.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images\LoginSetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images\LoginSetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--登陆窗体结束-->
    <!--选项卡样式开始-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="border" 
						CornerRadius="10" 
						Background="{TemplateBinding Background}" 
						BorderThickness="1" 
						BorderBrush="#FF444444" 
						Width="15" Height="15" 
						SnapsToDevicePixels="True">
                        <Grid Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="path1" Stroke="#FF444444" Data="M0,0 L8,8" StrokeThickness="2" />
                            <Path x:Name="path2" Stroke="#FF444444" Data="M8,0 L0,8" StrokeThickness="2" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////VicTabControlNormal样式//////////////////////////////////////////-->
    <Style x:Key="MainVicTabControlStyle" TargetType="{x:Type controls:VicTabControlNormal}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:VicTabItemNormal}">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Width" Value="130"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:VicTabItemNormal}">
                                <Border x:Name="Bd"
                            CornerRadius="4,4,0,0"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid  Name="grid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Name="aa" Content="{TemplateBinding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Border Name="bb" Margin="2,0,2,0" Grid.Column="1">
                                            <ContentPresenter Name="cc"
									    Content="{TemplateBinding Header}"
									    ContentTemplate="{TemplateBinding HeaderTemplate}"
									    ContentSource="Header"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
									    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									    Margin="{TemplateBinding Padding}"
									    RecognizesAccessKey="True">
                                            </ContentPresenter>
                                        </Border>
                                        <controls:VicButtonNormal x:Name="PART_CloseButton" 
								Grid.Column="1" 
								VerticalAlignment="Top"
								HorizontalAlignment="Right"
								Margin="2"
								Style="{DynamicResource CloseButtonStyle}"
								Visibility="Collapsed">
                                        </controls:VicButtonNormal>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="White" Opacity="0.9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" Value="Black" />
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Top">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                                    </Trigger>

                                    <Trigger Property="AllowDelete" Value="false">
                                        <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Collapsed"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Top"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="AllowDelete" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"></Setter>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Bottom"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,-1,0,0"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Left"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Right"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabControlNormal}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" />
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="1" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"  ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginVicTabControlStyle" TargetType="{x:Type controls:VicTabControlNormal}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:VicTabItemNormal}">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#FAFAFA"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:VicTabItemNormal}">
                                <Border x:Name="Bd"
                            CornerRadius="4,4,0,0"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid  Name="grid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Name="aa" Content="{TemplateBinding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Border Name="bb" Margin="2,0,2,0" Grid.Column="1">
                                            <ContentPresenter Name="cc"
									    Content="{TemplateBinding Header}"
									    ContentTemplate="{TemplateBinding HeaderTemplate}"
									    ContentSource="Header"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
									    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									    Margin="{TemplateBinding Padding}"
									    RecognizesAccessKey="True">
                                            </ContentPresenter>
                                        </Border>
                                        <controls:VicButtonNormal x:Name="PART_CloseButton" 
								Grid.Column="1" 
								VerticalAlignment="Top"
								HorizontalAlignment="Right"
								Margin="2"
								Style="{DynamicResource CloseButtonStyle}"
								Visibility="Collapsed">
                                        </controls:VicButtonNormal>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="White" Opacity="0.9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" Value="#31527d" />
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Top">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                                    </Trigger>

                                    <Trigger Property="AllowDelete" Value="false">
                                        <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Collapsed"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Top"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="AllowDelete" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"></Setter>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Bottom"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,-1,0,0"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Left"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TabStripPlacement" Value="Right"/>
                                            <Condition Property="IsSelected" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.ZIndex" Value="2" />
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,1"/>
                                        <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabControlNormal}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" />
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="1" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"  ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--选项卡样式结束-->
    <!--主窗体左侧工具栏开始-->
    <Style x:Key="RadioButtonFirstLevelMenu" TargetType="{x:Type controls:VicRadioButtonNormal}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#435058"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight"  Value="Bold"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="MinWidth" Value="30"></Setter>
        <Setter Property="Height" Value="37"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicRadioButtonNormal}">
                    <BulletDecorator Background="Transparent">
                        <Border x:Name="border"  
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFirstLevelMenu" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#435058"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight"  Value="Bold"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="MinWidth" Value="30"></Setter>
        <Setter Property="Height" Value="37"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <BulletDecorator Background="Transparent">
                        <Border x:Name="border"  
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxSecondLevelMenu" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#CBCBCB"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight"  Value="Bold"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid x:Name="grid" Background="{TemplateBinding Background}">
                                    <Popup x:Name="popup" IsOpen="False" 
            PlacementTarget="{Binding ElementName=grid}" 
            Placement="Right">
                                        <ScrollViewer x:Name="scrollViewerThirdMenu" Width="120" Style="{DynamicResource MenuScrollViewer}">
                                            <Grid Style="{DynamicResource LeftGrid}">
                                                <ListBox x:Name="listThirdMenuLocal" Style="{DynamicResource ListBoxThirdLevelMenu}" BorderThickness="0" BorderBrush="#F1F3F5" Margin="0" Padding="0" ItemsSource="{Binding SystemMenuList,UpdateSourceTrigger=PropertyChanged}">
                                                </ListBox>
                                            </Grid>
                                        </ScrollViewer>
                                    </Popup>
                                    <StackPanel x:Name="txt" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,10,0,0">
                                        <Image x:Name="img" Width="26" Height="22" ToolTip="{Binding MenuName}" VerticalAlignment="Center" Source="{Binding IconUrl,Converter={StaticResource ImgeNameToImageUrlConverter}}"/>
                                        <TextBlock Margin="20,0,0,0" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" FontSize="{TemplateBinding FontSize}"
                                                   FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" Text="{Binding MenuName}" VerticalAlignment="Center"/>
                                    </StackPanel>

                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger  Property="IsSelected" Value="true">
                                        <Setter Property="Source" TargetName="img" Value="{Binding CheckedIconUrl,Converter={StaticResource ImgeNameToImageUrlConverter}}"></Setter>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="true">
                                        <Setter Property="Source" TargetName="img" Value="{Binding CheckedIconUrl,Converter={StaticResource ImgeNameToImageUrlConverter}}"></Setter>
                                        <Setter Property="Foreground" Value="Yellow"/>
                                        <Setter Property="IsOpen" TargetName="popup" Value="true"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxThirdLevelMenu" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#CBCBCB"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid x:Name="grid" Background="{TemplateBinding Background}">
                                    <controls:VicRadioButtonNormal x:Name="rBtn" Style="{DynamicResource RadioButtonFirstLevelMenu}" Foreground="{TemplateBinding Foreground}" GroupName="A" Focusable="True" Background="{TemplateBinding Background}" IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                    Content="{Binding MenuName}"/>
                                    <Popup x:Name="popup" IsOpen="False" 
            PlacementTarget="{Binding ElementName=grid}" 
            Placement="Right">
                                        <ScrollViewer x:Name="scrollViewerThirdMenu" Width="120" Style="{DynamicResource MenuScrollViewer}">
                                            <Grid Style="{DynamicResource LeftGrid}">
                                                <ListBox x:Name="listFourMenuLocal" Style="{DynamicResource ListBoxFourthMenu}" BorderThickness="0" BorderBrush="#F1F3F5" Margin="0" Padding="0" ItemsSource="{Binding SystemMenuList,UpdateSourceTrigger=PropertyChanged}">
                                                </ListBox>
                                            </Grid>
                                        </ScrollViewer>
                                    </Popup>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger  Property="IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="Yellow"></Setter>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="Yellow"></Setter>
                                        <Setter Property="IsOpen" TargetName="popup" Value="true"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxFourthMenu" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#CBCBCB"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <controls:VicRadioButtonNormal Style="{DynamicResource RadioButtonFirstLevelMenu}" GroupName="A" Focusable="True" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                    Content="{Binding MenuName}" Command="{Binding DataContext.btnPluginIcoClickCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger  Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Yellow"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Storyboard x:Key="MenuExpandStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="scrollViewer">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="180"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="MenuCollapseStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="scrollViewer">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--主窗体左侧工具栏结束-->
    <!--主窗体右侧按钮样式开始-->
    <Style x:Key="btnMaxiStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="PART_Border"   BorderThickness="0" Padding="2">
                        <StackPanel  HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Line x:Name="PART_Path1" X1="2"  X2="10" Y1="1" Y2="1" Stroke="White"  StrokeThickness="2"  />
                            <Line x:Name="PART_Path2" X1="2"  X2="10" Y1="2" Y2="2" Stroke="White"  StrokeThickness="2"  />
                            <Line x:Name="PART_Path3" X1="2"  X2="10" Y1="3" Y2="3" Stroke="White"  StrokeThickness="2"  />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Silver" Offset="0.0" />
                                        <GradientStop Color="White" Offset="0.5" />
                                        <GradientStop Color="Silver" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="#FFBA3232" />
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="#FFBA3232" />
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="#FFBA3232" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnMiniStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="PART_Border"   BorderThickness="0" Padding="2">
                        <Line x:Name="PART_Path" X1="2"  X2="10" Y1="2" Y2="2" Stroke="White"  StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Silver" Offset="0.0" />
                                        <GradientStop Color="White" Offset="0.5" />
                                        <GradientStop Color="Silver" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="PART_Path" Value="#FFBA3232" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnCloseStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="PART_Border"   BorderThickness="0" Padding="2">
                        <Path x:Name="PART_Path" Data="M2,2 L2,2 10,10 M10,2 L10,2 2,10" Fill="Gray"  Stroke="White" Stretch="None" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Silver" Offset="0.0" />
                                        <GradientStop Color="White" Offset="0.5" />
                                        <GradientStop Color="Silver" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="PART_Path" Value="#FFBA3232" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnChangeSkinStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Color="White"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"  BorderThickness="0" Padding="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="PART_Path" Fill="#FFF4F4F5" HorizontalAlignment="Center" Stroke="White" VerticalAlignment="Center" Height="18.12" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="17.759">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="131.051"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" StartPoint="0.5,78.8983172774315">
                                        <BezierSegment Point3="49.5,127.898317277432" Point2="49.5,100.836363048867" Point1="27.5619542285649,78.8983172774315"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="49.4805583085988,127.670269556321">
                                        <LineSegment Point="96.0784127394104,130.246935524208"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="0.738676457775789,78.7247658032647">
                                        <LineSegment Point="3.31534855514627,32.126900749484"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="90.3909287772115,89.0339314524066">
                                        <LineSegment Point="127.644363732333,55.6845448906644"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="40.3021150491014,34.5807450096124">
                                        <LineSegment Point="78.3006220713602,0.564367701560684"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="127.605323149417,56.390572995263">
                                        <LineSegment Point="77.5719147880499,0.500000000091759"/>
                                    </PathFigure>
                                    <PathFigure IsFilled="False" StartPoint="90.7626642620414,89.2880813166091">
                                        <BezierSegment Point3="95.510544637534,129.726476112273" Point2="105.442884011954,118.533124413565" Point1="103.317185681609,100.428239134179"/>
                                    </PathFigure>
                                    <PathFigure IsFilled="False" StartPoint="3.07833805025023,33.72898388847">
                                        <BezierSegment Point3="40.367265441197,34.2215010104423" Point2="27.903005754828,24.0181742907099" Point1="11.2081869241446,23.7976641894249"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Silver" Offset="0.0" />
                                        <GradientStop Color="White" Offset="0.5" />
                                        <GradientStop Color="Silver" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="PART_Path" Value="#FFBA3232" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--主窗体右侧按钮样式结束-->
    <!--消息提示框样式开始-->
    <controls:IconToImageConverter x:Key="IconToImageConverter"/>
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type controls:VicButtonNormal}">
        <Setter Property="Background" Value="#31527d" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment"  Value="Center" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicButtonNormal}">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="grid"
                                    Property="Background"
                                    Value="#31527d" />

                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="grid"
                                    Property="Background"
                                    Value="#31527d" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicMessageBoxNormal}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="#024672"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicMessageBoxNormal}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"   CornerRadius="0">
                        <Border.Background>
                            <ImageBrush  ImageSource="Images\messagebackground.png"></ImageBrush>
                        </Border.Background>
                        <Grid Name="gridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Name="brTitle" Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,1">
                                <Grid Name="gridTitle"  Background="#31527d">
                                    <Label Name="lblTitle"  HorizontalAlignment="Left"  Margin="10,0,0,0" VerticalAlignment="Center" FontSize="16px" Content="{TemplateBinding Title}" FontWeight="Bold" Foreground="White"/>
                                    <controls:VicButtonNormal x:Name="btnClose"  HorizontalAlignment="Right" Style="{StaticResource WindowButtonStyle}"  VerticalAlignment="Top" Height="34" Width="34" FocusVisualStyle="{x:Null}" ToolTip="关闭">
                                        <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" SnapsToDevicePixels="True" Fill="White" />
                                    </controls:VicButtonNormal>
                                </Grid>
                            </Border>

                            <Grid Name="gridBody" Grid.Row="1" >
                                <Grid.Background>
                                    <SolidColorBrush Color="White" Opacity="0.6"></SolidColorBrush>
                                </Grid.Background>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image VerticalAlignment="Center" Margin="10,0,10,0" Width="32" Height="32" Source="{TemplateBinding Icon,Converter={StaticResource IconToImageConverter}}"></Image>
                                <TextBlock Text="{TemplateBinding Message}" VerticalAlignment="Center" Grid.Column="1" Margin="10" TextTrimming="None"
                                   Foreground="{TemplateBinding Foreground}"
                                   TextWrapping="WrapWithOverflow"
                                   FontSize="{TemplateBinding FontSize}" />
                            </Grid>
                            <Border Name="brBtn" BorderThickness="0" Grid.Row="2">
                                <Border.Background>
                                    <SolidColorBrush Color="White" Opacity="0.6"></SolidColorBrush>
                                </Border.Background>
                                <Grid Name="gridBtn">
                                    <ItemsControl Name="itembtn" Margin="2" ItemsSource="{TemplateBinding CtrlButtonCollection}"  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,0,5,0">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Rows="1"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="controls:VicButtonNormal">
                                                <Setter Property="Background"   Value="#f1f1f1"/>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--消息提示框样式结束-->
    <!--切换皮肤窗体样式开始-->
    <Style x:Key="WindowChangeSkin" TargetType="{x:Type controls:VicWindowNormal}">
        <Setter Property="BorderBrush" Value="#024672"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicWindowNormal}">
                    <Grid >
                        <Grid.Background>
                            <ImageBrush ImageSource="Images\messagebackground.png"/>
                        </Grid.Background>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="0">
                            <Grid Name="gridRoot">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Name="gridTitleBar" Grid.Row="0" Background="#31527d">
                                    <Label Name="lblTitle"  HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" FontSize="18px" Content="{TemplateBinding Title}" FontWeight="Bold" Foreground="White"/>
                                    <controls:VicButtonNormal x:Name="btnMini" Style="{StaticResource WindowButtonStyle}" HorizontalAlignment="Right" Margin="0,0,66,0" VerticalAlignment="Top"  Height="34" Width="34" FocusVisualStyle="{x:Null}" ToolTip="最小化">
                                        <Path Data="F1M0,6L0,9 9,9 9,6 0,6z"
                                  SnapsToDevicePixels="True"
                                  Fill="White" />
                                    </controls:VicButtonNormal>
                                    <controls:VicButtonNormal x:Name="btnMax" Style="{StaticResource WindowButtonStyle}" HorizontalAlignment="Right"  Margin="0,0,33,0" VerticalAlignment="Top" Height="34" Width="34" FocusVisualStyle="{x:Null}" ToolTip="最大化">
                                        <Grid>
                                            <Path x:Name="MaximisePath"
                                      SnapsToDevicePixels="True"
                                      Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z"
                                      Fill="White" />
                                            <Path x:Name="RestorePath"
                                      SnapsToDevicePixels="True"
                                      Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
                                      Fill="White" />
                                        </Grid>
                                    </controls:VicButtonNormal>
                                    <controls:VicButtonNormal x:Name="btnClose"  Style="{StaticResource WindowButtonStyle}" HorizontalAlignment="Right"  VerticalAlignment="Top" Height="34" Width="34" FocusVisualStyle="{x:Null}" ToolTip="关闭">
                                        <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                  SnapsToDevicePixels="True"
                                  Fill="White" />
                                    </controls:VicButtonNormal>
                                </Grid>
                                <Grid Name="gridBody" Grid.Row="1">
                                    <Grid.Background>
                                        <SolidColorBrush Color="White" Opacity="0.6"/>
                                    </Grid.Background>
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </Grid>
                                <Grid Name="statusBar" Grid.Row="2" Visibility="Collapsed">
                                    <Label Content="状态栏" FontFamily="SimSun"  Foreground="#828282" Padding="15,0,0,0"></Label>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="RadioButtonListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True" ScrollViewer.CanContentScroll="True"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
                    <Setter Property="Margin"  Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                                    <Grid Name="grid" MinHeight="122" MinWidth="203" Style="{DynamicResource FaceImage}"/>
                                    <TextBlock Text="{Binding SkinName}" MinWidth="60" MinHeight="30" TextAlignment="Center"/>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true" >
                                        <Setter Property="Style" TargetName="grid"  Value="{DynamicResource SelectedFaceImage}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--窗体样式结束-->
    <!--左TabControl样式开始-->
    <Style x:Key="left_TabControlStyle" TargetType="{x:Type controls:VicTabControlNormal}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabControlNormal}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="13"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent" Opacity="0.6" Grid.Column="0" BorderThickness="0"/>
                        <StackPanel IsItemsHost="True" Grid.Column="0" Margin="0" />
                        <Border Background="#FAFAFA" Opacity="0.6" Grid.Column="1" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="True" />
                        <ContentPresenter Content="{TemplateBinding SelectedContent}" Grid.Column="1" Margin="1,0,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="left_TabItemStyle" TargetType="{x:Type controls:VicTabItemNormal}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="13"></Setter>
        <Setter Property="MinHeight" Value="60"></Setter>
        <Setter Property="Margin" Value="0,5,0,5"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabItemNormal}">
                    <Border x:Name="border" BorderThickness="0" Background="Transparent">
                        <TextBlock x:Name="buttonText"  TextWrapping="Wrap" TextBlock.FontFamily="Calibri" Foreground="Black" TextAlignment="Center" TextBlock.FontSize="14" Text="{TemplateBinding Header}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="border" Value="Black"/>
                            <Setter Property="Foreground" TargetName="buttonText" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--左TabControl样式结束-->


    <!--VicCheckBox样式开始-->
    <controls:CheckboxBoolConverter x:Key="CheckboxBoolConverter"/>

    <!--//////////////////////////////////////////VicCheckBox样式//////////////////////////////////////////-->
    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <!--VicCheckBox 外框颜色-->
    <SolidColorBrush x:Key="CheckBoxStroke" Color="Gainsboro"/>
    <!--VicCheckBox 无内容时 焦点聚焦状态下的虚线框样式（左侧方框部分）-->
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicCheckBox 有内容时 焦点聚焦状态下的虚线框样式（右侧文字部分）-->
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="20,0,0,0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicCheckBoxNormal}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicCheckBoxNormal}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"  Background="White" BorderThickness="1" CornerRadius="2" Width="20" Height="20">
                                <Path Width="12" Height="12" x:Name="Check" Stroke="Black" StrokeThickness="2"
            Data="M 0 6 L 6 11 L 11 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Check" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Check" Property="Data" Value="M 0 6 L 12 6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicCheckBox样式开始-->
    <!--VicComboBoxNormal样式开始-->
    <controls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxCheck" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Gainsboro"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="{TemplateBinding Background }"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid" Background="Gainsboro" Width="22"  HorizontalAlignment="Right">
                            <Path x:Name="path" Data="{StaticResource DownArrowGeometry}" Fill="Gray" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                            <Setter TargetName="path" Property="Fill" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="path" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:VicComboBoxNormal}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="Gainsboro"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicComboBoxNormal}">
                    <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer CanContentScroll="true">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                            <TextBox x:Name="PART_EditableTextBox"   Grid.Column="0"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <CheckBox Grid.Column="1" Width="23"  HorizontalAlignment="Right" Margin="0"  Visibility="{TemplateBinding HideDropDownToggle,Converter={StaticResource BoolToVisibilityConverter}}"  Style="{StaticResource ComboBoxCheck}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="120"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="IsEnabled"  Value="True"    TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden"  TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicComboBoxNormal样式开始-->

    <!--VicTextBoxNormal样式开始-->
    <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
    <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <controls:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
    <Style   TargetType="{x:Type controls:VicTextBoxNormal}">
        <Setter Property="BorderBrush" Value="Gainsboro"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTextBoxNormal}">
                    <Border Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid    Height="{TemplateBinding Height}"  MinWidth="{TemplateBinding MinWidth}"  Background="{StaticResource brushWatermarkBackground}"  >
                            <TextBlock  Text="{TemplateBinding WaterMark}"  Foreground="{StaticResource brushWatermarkForeground}" VerticalAlignment="Center"
                               Visibility="{Binding ElementName=txtUserEntry, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBox x:Name="txtUserEntry" VerticalContentAlignment="Center"  BorderThickness="0" Background="Transparent" Text="{TemplateBinding VicText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--VicTextBoxNormal样式结束-->
</ResourceDictionary>