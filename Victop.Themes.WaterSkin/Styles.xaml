<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:controls="clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
                     xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    >

    <SolidColorBrush x:Key="WindowTitleAreaBackground" Color="#1A99D7"/>
    <SolidColorBrush  x:Key="TreeAreaBackground" Color="#ECF9FF"/>
    <SolidColorBrush   x:Key="SearchAreaBackground" Color="#E3F3FB"/>
    <SolidColorBrush x:Key="PagingAreaBackground" Color="#ECF9FF"/>
    <LinearGradientBrush x:Key="ToolBarAreaBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop  Color="#d1f0ff" Offset="0"/>
        <GradientStop Color="#b1e6ff" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ShadowWindow" TargetType="{x:Type Window}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Width" Value="965"/>
        <Setter Property="Height" Value="670"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/background.png" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid >
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    RadiusX="1" RadiusY="1">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"
                     BorderBrush="#024672"
                   BorderThickness="1"
                   Padding="{TemplateBinding Margin}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                   CornerRadius="0">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Black"/>
    </Style>

    <Style x:Key="logoImage" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Source" Value="Images\logo.png"/>
    </Style>

    <Style x:Key="MainGrid" TargetType="{x:Type Grid}">
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="SubBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="80,50,60,80"/>
    </Style>

    <Style x:Key="Line1" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image1" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\in.png"/>
    </Style>

    <Style x:Key="Line2" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image2" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\out.png"/>
    </Style>

    <Style x:Key="Line3" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image3" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\Grid.png"/>
    </Style>

    <Style x:Key="RightGrid" TargetType="{x:Type Grid}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="SelectedFaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/indexSelected.png" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
    </Style>

    <Style x:Key="FaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/index.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Background" Value="#FFFFFE"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid样式开始-->
    <Style x:Key="DataGridRowStyle"  TargetType="DataGridRow">
        <Setter Property="Background" Value="#F2F2F2" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#ffffff" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#fafafa" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eceaea"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="LightGray"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="1"/>
        <!--调试心得：查找出来的数据集里面出现空行时，会错位，所以必须设置行头宽度个值-->
        <Setter Property="Background" Value="#e4f4fc"/>
    </Style>

    <Style TargetType="{x:Type controls:VicDataGrid}">
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="BorderBrush" Value="#d6c79b" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="AlternationCount" Value="2"></Setter>

        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"></Setter>
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}"></Setter>
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"  Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"  Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
    </Style>
    <!--DataGrid样式结束-->

    <Style x:Key="btnMainFeedBackStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnChangeSkinStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/ChangeSkin.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/ChangeSkin.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/ChangeSkinMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/ChangeSkinMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMiniStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Mini.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/Mini.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MiniMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MiniMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMaxiStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Maxi.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Maxi.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MaxiMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MaxiMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Close.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Close.png"/>
                        </Themes:ButtonChrome.Background>

                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/CloseMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/CloseMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSetStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome" >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainFrmUserPictrueGridStyle" TargetType="{x:Type controls:VicButtonImage}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\UserPictrue.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainFrmUserName" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,20,0"/>
    </Style>

    <!--滚动条样式开始-->
    <SolidColorBrush x:Key="StandardBorderBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="NormalBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#d8e9f0" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#d8e9f0" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
      StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0.0" />
                <GradientStop Color="White" Offset="0.6" />
                <GradientStop Color="#DDDDDD" Offset="1.2"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"
      StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush"
      StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                        <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
              Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
      TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
            <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
      TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
            <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="MenuScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="11" />
                <Setter Property="Template"
            Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="9"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
            Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource MenuScrollBar}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource MenuScrollBar}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  Grid.Row="0"
            Grid.Column="1"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
           
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--滚动条样式结束-->

    <Style x:Key="btnStretchStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images\Stretch.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--登陆窗体开始-->
    <Style x:Key="loginWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\loginWindow.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="loginTopGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\loginTitle.png"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="loginMainGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\loginMain.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginTopLeftGridStyle1" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\LoginTopLeftGrid1.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginTopLeftGridStyle2" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\LoginTopLeftGrid2.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="loginMainUserPhotoGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\UserPhoto.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButtonStyle" TargetType="{x:Type controls:VicButtonImage}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#676767"/>
        <Setter Property="Width" Value="129"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images\loginBtn.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnLoginSetStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome" >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images\LoginSet.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images\LoginSet.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images\LoginSetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images\LoginSetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--登陆窗体结束-->
    <!--选项卡样式开始-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
						CornerRadius="10" 
						Background="{TemplateBinding Background}" 
						BorderThickness="1" 
						BorderBrush="#FF444444" 
						Width="15" Height="15" 
						SnapsToDevicePixels="True">
                        <Grid Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="path1" Stroke="#FF444444" Data="M0,0 L8,8" StrokeThickness="2" />
                            <Path x:Name="path2" Stroke="#FF444444" Data="M8,0 L0,8" StrokeThickness="2" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////VicTabControlNormal样式//////////////////////////////////////////-->
    <Style TargetType="{x:Type controls:VicTabControlNormal}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="BorderBrush" Value="{StaticResource TabBorderBrush}"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="TabItemNormalBackground" Value="{StaticResource TabItemNormalBackground}"/>
        <Setter Property="TabItemMouseOverBackground" Value="{StaticResource TabItemHoverBackground}"/>
        <Setter Property="TabItemSelectedBackground" Value="{StaticResource TabItemSelectedBackground}"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabControlNormal}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" />
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <!--<ToggleButton x:Name="PART_DropDown" Grid.Column="0" Width="20" Height="20" VerticalAlignment="Bottom" Margin="-1,0,0,-1" Style="{StaticResource DropDownToggleButtonStyle}" ToolTip="显示所有列表项"  Panel.ZIndex="1"
                              Visibility="{Binding IsShowItemsMenu, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolConverter}}"/>-->
                        <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="1" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Grid Grid.Row="1" Grid.Column="1" Style="{DynamicResource MainGrid}"></Grid>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"  ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////VicTabItemNormal样式//////////////////////////////////////////-->
    <Style TargetType="{x:Type controls:VicTabItemNormal}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicTabItemNormal}">
                    <Border x:Name="Bd"
                            CornerRadius="4,4,0,0"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid  Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="aa" Content="{TemplateBinding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border Name="bb" Margin="2,0,2,0" Grid.Column="1">
                                <ContentPresenter Name="cc"
									    Content="{TemplateBinding Header}"
									    ContentTemplate="{TemplateBinding HeaderTemplate}"
									    ContentSource="Header"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
									    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									    Margin="{TemplateBinding Padding}"
									    RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                            <Button x:Name="PART_CloseButton" 
								Grid.Column="1" 
								VerticalAlignment="Top"
								HorizontalAlignment="Right"
								Margin="2"
								Style="{StaticResource CloseButtonStyle}"
								Visibility="Collapsed">
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="0.9" />

                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Margin" TargetName="Bd" Value="0"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>

                        <Trigger Property="AllowDelete" Value="false">
                            <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="2" />
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                            <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="AllowDelete" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"></Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="2" />
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                            <!--<Setter Property="CornerRadius" TargetName="Bd" Value="0,0,4,4"/>-->
                            <Setter Property="Margin" TargetName="Bd" Value="0,-1,0,0"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="2" />
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                            <!--<Setter Property="CornerRadius" TargetName="Bd" Value="4,0,0,4"/>-->
                            <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="2" />
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,1"/>
                            <!--<Setter Property="CornerRadius" TargetName="Bd" Value="0,4,0,0"/>-->
                            <Setter Property="Margin" TargetName="Bd" Value="0,0,0,-1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--选项卡样式结束-->
</ResourceDictionary>