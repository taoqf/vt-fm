<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:controls="clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
                     xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    >

    <SolidColorBrush x:Key="WindowTitleAreaBackground" Color="#1A99D7"/>
    <SolidColorBrush  x:Key="TreeAreaBackground" Color="#ECF9FF"/>
    <SolidColorBrush   x:Key="SearchAreaBackground" Color="#E3F3FB"/>
    <SolidColorBrush x:Key="PagingAreaBackground" Color="#ECF9FF"/>
    <LinearGradientBrush x:Key="ToolBarAreaBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop  Color="#d1f0ff" Offset="0"/>
        <GradientStop Color="#b1e6ff" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ShadowWindow" TargetType="{x:Type Window}">
        <Setter Property="WindowState" Value="Maximized"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/background.png" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid >
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    RadiusX="1" RadiusY="1">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"
                     BorderBrush="#024672"
                   BorderThickness="1"
                   Padding="{TemplateBinding Margin}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                   CornerRadius="0">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Black"/>
    </Style>

    <Style x:Key="MainGrid" TargetType="{x:Type Grid}">
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="SubBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="80,50,60,80"/>
    </Style>

    <Style x:Key="Line1" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image1" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\in.png"/>
    </Style>

    <Style x:Key="Line2" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image2" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\out.png"/>
    </Style>

    <Style x:Key="Line3" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="#956165"/>
    </Style>

    <Style x:Key="Image3" TargetType="Image">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Source" Value="Images\Grid.png"/>
    </Style>

    <Style x:Key="RightGrid" TargetType="{x:Type Grid}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="SelectedFaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/indexSelected.png" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
    </Style>

    <Style x:Key="FaceImage" TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Images/index.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Background" Value="#FFFFFE"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#F8F8F6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid样式开始-->
    <Style x:Key="DataGridRowStyle"  TargetType="DataGridRow">
        <Setter Property="Background" Value="#F2F2F2" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#ffffff" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#fafafa" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eceaea"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="LightGray"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="1"/>
        <!--调试心得：查找出来的数据集里面出现空行时，会错位，所以必须设置行头宽度个值-->
        <Setter Property="Background" Value="#e4f4fc"/>
    </Style>

    <Style TargetType="{x:Type controls:VicDataGrid}">
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="BorderBrush" Value="#d6c79b" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6d8da"/>
            </Setter.Value>
        </Setter>
        <Setter Property="AlternationCount" Value="2"></Setter>

        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"></Setter>
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}"></Setter>
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VicDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"  Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"  Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
    </Style>
    <!--DataGrid样式结束-->

    <Style x:Key="btnMainFeedBackStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/btnMainFeedBack.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/btnMOMainFeedBack.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnChangeSkinStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/ChangeSkin.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/ChangeSkin.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/ChangeSkinMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/ChangeSkinMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMiniStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Mini.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush ImageSource="Images/Mini.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MiniMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MiniMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMaxiStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Maxi.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Maxi.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MaxiMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/MaxiMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome"  >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Close.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Close.png"/>
                        </Themes:ButtonChrome.Background>

                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/CloseMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/CloseMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSetStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Themes:ButtonChrome x:Name="Chrome" >
                        <Themes:ButtonChrome.OpacityMask>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.OpacityMask>
                        <Themes:ButtonChrome.Background>
                            <ImageBrush  ImageSource="Images/Set.png"/>
                        </Themes:ButtonChrome.Background>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OpacityMask" TargetName="Chrome">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/SetMouseOver.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>