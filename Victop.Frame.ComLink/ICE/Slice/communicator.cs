// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `communicator.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace slice
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Reply : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public int replyMode;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string replyContent;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Reply()
        {
            replyContent = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Reply(int replyMode, string replyContent)
        {
            this.replyMode = replyMode;
            this.replyContent = replyContent;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::slice::Reply");
            IceInternal.HashUtil.hashAdd(ref h__, replyMode);
            IceInternal.HashUtil.hashAdd(ref h__, replyContent);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Reply o__ = (Reply)other__;
            if(!replyMode.Equals(o__.replyMode))
            {
                return false;
            }
            if(replyContent == null)
            {
                if(o__.replyContent != null)
                {
                    return false;
                }
            }
            else
            {
                if(!replyContent.Equals(o__.replyContent))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator==(Reply lhs__, Reply rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator!=(Reply lhs__, Reply rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(replyMode);
            os__.writeString(replyContent);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void read__(IceInternal.BasicStream is__)
        {
            replyMode = is__.readInt();
            replyContent = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static void write__(IceInternal.BasicStream os__, Reply v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static Reply read__(IceInternal.BasicStream is__, Reply v__)
        {
            if(v__ == null)
            {
                v__ = new Reply();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly Reply nullMarshalValue__ = new Reply();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Message : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string messageID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string routerAddress;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string receiptAddress;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string receiptSessionID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string senderSessionID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string fromID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string toID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string replyToID;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string messageType;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string messageControl;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string messageContent;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string sessionId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string spaceId;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public string clientCallBackProxy;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Message()
        {
            messageID = "";
            routerAddress = "";
            receiptAddress = "";
            receiptSessionID = "";
            senderSessionID = "";
            fromID = "";
            toID = "";
            replyToID = "";
            messageType = "";
            messageControl = "";
            messageContent = "";
            sessionId = "";
            spaceId = "";
            clientCallBackProxy = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public Message(string messageID, string routerAddress, string receiptAddress, string receiptSessionID, string senderSessionID, string fromID, string toID, string replyToID, string messageType, string messageControl, string messageContent, string sessionId, string spaceId, string clientCallBackProxy)
        {
            this.messageID = messageID;
            this.routerAddress = routerAddress;
            this.receiptAddress = receiptAddress;
            this.receiptSessionID = receiptSessionID;
            this.senderSessionID = senderSessionID;
            this.fromID = fromID;
            this.toID = toID;
            this.replyToID = replyToID;
            this.messageType = messageType;
            this.messageControl = messageControl;
            this.messageContent = messageContent;
            this.sessionId = sessionId;
            this.spaceId = spaceId;
            this.clientCallBackProxy = clientCallBackProxy;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::slice::Message");
            IceInternal.HashUtil.hashAdd(ref h__, messageID);
            IceInternal.HashUtil.hashAdd(ref h__, routerAddress);
            IceInternal.HashUtil.hashAdd(ref h__, receiptAddress);
            IceInternal.HashUtil.hashAdd(ref h__, receiptSessionID);
            IceInternal.HashUtil.hashAdd(ref h__, senderSessionID);
            IceInternal.HashUtil.hashAdd(ref h__, fromID);
            IceInternal.HashUtil.hashAdd(ref h__, toID);
            IceInternal.HashUtil.hashAdd(ref h__, replyToID);
            IceInternal.HashUtil.hashAdd(ref h__, messageType);
            IceInternal.HashUtil.hashAdd(ref h__, messageControl);
            IceInternal.HashUtil.hashAdd(ref h__, messageContent);
            IceInternal.HashUtil.hashAdd(ref h__, sessionId);
            IceInternal.HashUtil.hashAdd(ref h__, spaceId);
            IceInternal.HashUtil.hashAdd(ref h__, clientCallBackProxy);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Message o__ = (Message)other__;
            if(messageID == null)
            {
                if(o__.messageID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!messageID.Equals(o__.messageID))
                {
                    return false;
                }
            }
            if(routerAddress == null)
            {
                if(o__.routerAddress != null)
                {
                    return false;
                }
            }
            else
            {
                if(!routerAddress.Equals(o__.routerAddress))
                {
                    return false;
                }
            }
            if(receiptAddress == null)
            {
                if(o__.receiptAddress != null)
                {
                    return false;
                }
            }
            else
            {
                if(!receiptAddress.Equals(o__.receiptAddress))
                {
                    return false;
                }
            }
            if(receiptSessionID == null)
            {
                if(o__.receiptSessionID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!receiptSessionID.Equals(o__.receiptSessionID))
                {
                    return false;
                }
            }
            if(senderSessionID == null)
            {
                if(o__.senderSessionID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!senderSessionID.Equals(o__.senderSessionID))
                {
                    return false;
                }
            }
            if(fromID == null)
            {
                if(o__.fromID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!fromID.Equals(o__.fromID))
                {
                    return false;
                }
            }
            if(toID == null)
            {
                if(o__.toID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!toID.Equals(o__.toID))
                {
                    return false;
                }
            }
            if(replyToID == null)
            {
                if(o__.replyToID != null)
                {
                    return false;
                }
            }
            else
            {
                if(!replyToID.Equals(o__.replyToID))
                {
                    return false;
                }
            }
            if(messageType == null)
            {
                if(o__.messageType != null)
                {
                    return false;
                }
            }
            else
            {
                if(!messageType.Equals(o__.messageType))
                {
                    return false;
                }
            }
            if(messageControl == null)
            {
                if(o__.messageControl != null)
                {
                    return false;
                }
            }
            else
            {
                if(!messageControl.Equals(o__.messageControl))
                {
                    return false;
                }
            }
            if(messageContent == null)
            {
                if(o__.messageContent != null)
                {
                    return false;
                }
            }
            else
            {
                if(!messageContent.Equals(o__.messageContent))
                {
                    return false;
                }
            }
            if(sessionId == null)
            {
                if(o__.sessionId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!sessionId.Equals(o__.sessionId))
                {
                    return false;
                }
            }
            if(spaceId == null)
            {
                if(o__.spaceId != null)
                {
                    return false;
                }
            }
            else
            {
                if(!spaceId.Equals(o__.spaceId))
                {
                    return false;
                }
            }
            if(clientCallBackProxy == null)
            {
                if(o__.clientCallBackProxy != null)
                {
                    return false;
                }
            }
            else
            {
                if(!clientCallBackProxy.Equals(o__.clientCallBackProxy))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator==(Message lhs__, Message rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static bool operator!=(Message lhs__, Message rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(messageID);
            os__.writeString(routerAddress);
            os__.writeString(receiptAddress);
            os__.writeString(receiptSessionID);
            os__.writeString(senderSessionID);
            os__.writeString(fromID);
            os__.writeString(toID);
            os__.writeString(replyToID);
            os__.writeString(messageType);
            os__.writeString(messageControl);
            os__.writeString(messageContent);
            os__.writeString(sessionId);
            os__.writeString(spaceId);
            os__.writeString(clientCallBackProxy);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public void read__(IceInternal.BasicStream is__)
        {
            messageID = is__.readString();
            routerAddress = is__.readString();
            receiptAddress = is__.readString();
            receiptSessionID = is__.readString();
            senderSessionID = is__.readString();
            fromID = is__.readString();
            toID = is__.readString();
            replyToID = is__.readString();
            messageType = is__.readString();
            messageControl = is__.readString();
            messageContent = is__.readString();
            sessionId = is__.readString();
            spaceId = is__.readString();
            clientCallBackProxy = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static void write__(IceInternal.BasicStream os__, Message v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
        public static Message read__(IceInternal.BasicStream is__, Message v__)
        {
            if(v__ == null)
            {
                v__ = new Message();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly Message nullMarshalValue__ = new Message();

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface MessageEndpoint : Ice.Object, MessageEndpointOperations_, MessageEndpointOperationsNC_, Glacier2.Session
    {
    }
}

namespace slice
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public delegate void Callback_MessageEndpoint_sendMessage(slice.Reply ret__);
}

namespace slice
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface MessageEndpointPrx : Glacier2.SessionPrx
    {
        slice.Reply sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent);
        slice.Reply sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<slice.Callback_MessageEndpoint_sendMessage> begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent);
        Ice.AsyncResult<slice.Callback_MessageEndpoint_sendMessage> begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        slice.Reply end_sendMessage(Ice.AsyncResult r__);
    }
}

namespace slice
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface MessageEndpointOperations_ : Glacier2.SessionOperations_
    {
        /// <summary>
        /// 消息发送，消息头与消息体分离
        /// </summary>
        /// <param name="cb__">The callback object for the operation.</param>
        /// <param name="current__">The Current object for the invocation.</param>
        void sendMessage_async(slice.AMD_MessageEndpoint_sendMessage cb__, string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface MessageEndpointOperationsNC_ : Glacier2.SessionOperationsNC_
    {
        /// <summary>
        /// 消息发送，消息头与消息体分离
        /// </summary>
        /// <param name="cb__">The callback object for the operation.</param>
        void sendMessage_async(slice.AMD_MessageEndpoint_sendMessage cb__, string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent);
    }
}

namespace slice
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public sealed class MessageEndpointPrxHelper : Ice.ObjectPrxHelperBase, MessageEndpointPrx
    {
        #region Synchronous operations

        /// <summary>
        /// Destroy the session.
        /// This is called automatically when the
        /// Router is destroyed.
        /// </summary>
        
        public void destroy()
        {
            this.destroy(null, false);
        }

        /// <summary>
        /// Destroy the session.
        /// This is called automatically when the
        /// Router is destroyed.
        /// </summary>
        /// <param name="context__">The Context map to send with the invocation.</param>
        
        public void destroy(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            this.destroy(context__, true);
        }

        private void destroy(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            end_destroy(begin_destroy(context__, explicitCtx__, true, null, null));
        }

        /// <summary>
        /// 消息发送，消息头与消息体分离
        /// </summary>
        
        public slice.Reply sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent)
        {
            return this.sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, null, false);
        }

        /// <summary>
        /// 消息发送，消息头与消息体分离
        /// </summary>
        /// <param name="context__">The Context map to send with the invocation.</param>
        
        public slice.Reply sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return this.sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, context__, true);
        }

        private slice.Reply sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__sendMessage_name);
            return end_sendMessage(begin_sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Glacier2.Callback_Session_destroy> begin_destroy()
        {
            return begin_destroy(null, false, false, null, null);
        }

        /// <summary>
        /// Destroy the session.
        /// This is called automatically when the
        /// </summary>
        /// <param name="ctx__">The Context map to send with the invocation.</param>
        public Ice.AsyncResult<Glacier2.Callback_Session_destroy> begin_destroy(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_destroy(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_destroy(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_destroy(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_destroy(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_destroy(ctx__, true, false, cb__, cookie__);
        }

        private const string __destroy_name = "destroy";

        public void end_destroy(Ice.AsyncResult r__)
        {
            end__(r__, __destroy_name);
        }

        private Ice.AsyncResult<Glacier2.Callback_Session_destroy> begin_destroy(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Glacier2.Callback_Session_destroy> result__ = getOnewayOutgoingAsync<Glacier2.Callback_Session_destroy>(__destroy_name, destroy_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__destroy_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void destroy_completed__(Glacier2.Callback_Session_destroy cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<slice.Callback_MessageEndpoint_sendMessage> begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent)
        {
            return begin_sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, null, false, false, null, null);
        }

        /// <summary>
        /// 消息发送，消息头与消息体分离
        /// </summary>
        /// <param name="ctx__">The Context map to send with the invocation.</param>
        public Ice.AsyncResult<slice.Callback_MessageEndpoint_sendMessage> begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendMessage(hash, isAsync, msg, index, fragmentSize, messagecontent, ctx__, true, false, cb__, cookie__);
        }

        private const string __sendMessage_name = "sendMessage";

        public slice.Reply end_sendMessage(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __sendMessage_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                slice.Reply ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = null;
                ret__ = slice.Reply.read__(is__, ret__);
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<slice.Callback_MessageEndpoint_sendMessage> begin_sendMessage(string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__sendMessage_name);
            IceInternal.TwowayOutgoingAsync<slice.Callback_MessageEndpoint_sendMessage> result__ =  getTwowayOutgoingAsync<slice.Callback_MessageEndpoint_sendMessage>(__sendMessage_name, sendMessage_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__sendMessage_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(hash);
                os__.writeBool(isAsync);
                slice.Message.write__(os__, msg);
                os__.writeInt(index);
                os__.writeInt(fragmentSize);
                os__.writeString(messagecontent);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void sendMessage_completed__(Ice.AsyncResult r__, slice.Callback_MessageEndpoint_sendMessage cb__, Ice.ExceptionCallback excb__)
        {
            slice.Reply ret__;
            try
            {
                ret__ = end_sendMessage(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static MessageEndpointPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MessageEndpointPrx r = b as MessageEndpointPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MessageEndpointPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            MessageEndpointPrx r = b as MessageEndpointPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MessageEndpointPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MessageEndpointPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MessageEndpointPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MessageEndpointPrx r = b as MessageEndpointPrx;
            if(r == null)
            {
                MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MessageEndpointPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            MessageEndpointPrxHelper h = new MessageEndpointPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Glacier2::Session",
            "::Ice::Object",
            "::slice::MessageEndpoint"
        };

        public static string ice_staticId()
        {
            return ids__[2];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, MessageEndpointPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static MessageEndpointPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                MessageEndpointPrxHelper result = new MessageEndpointPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace slice
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public abstract class MessageEndpointDisp_ : Ice.ObjectImpl, MessageEndpoint
    {
        #region Slice operations

        public void sendMessage_async(slice.AMD_MessageEndpoint_sendMessage cb__, string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent)
        {
            sendMessage_async(cb__, hash, isAsync, msg, index, fragmentSize, messagecontent, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void sendMessage_async(slice.AMD_MessageEndpoint_sendMessage cb__, string hash, bool isAsync, slice.Message msg, int index, int fragmentSize, string messagecontent, Ice.Current current__);

        #endregion

        #region Inherited Slice operations

        public void destroy()
        {
            destroy(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void destroy(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Glacier2::Session",
            "::Ice::Object",
            "::slice::MessageEndpoint"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[2];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[2];
        }

        public static new string ice_staticId()
        {
            return ids__[2];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus sendMessage___(MessageEndpoint obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string hash;
            bool isAsync;
            slice.Message msg;
            msg = null;
            int index;
            int fragmentSize;
            string messagecontent;
            hash = is__.readString();
            isAsync = is__.readBool();
            msg = slice.Message.read__(is__, msg);
            index = is__.readInt();
            fragmentSize = is__.readInt();
            messagecontent = is__.readString();
            inS__.endReadParams();
            AMD_MessageEndpoint_sendMessage cb__ = new _AMD_MessageEndpoint_sendMessage(inS__);
            try
            {
                obj__.sendMessage_async(cb__, hash, isAsync, msg, index, fragmentSize, messagecontent, current__);
            }
            catch(_System.Exception ex__)
            {
                cb__.ice_exception(ex__);
            }
            return Ice.DispatchStatus.DispatchAsync;
        }

        private static string[] all__ =
        {
            "destroy",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "sendMessage"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Glacier2.SessionDisp_.destroy___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
                case 5:
                {
                    return sendMessage___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}

namespace slice
{
    /// <summary>
    /// 消息发送，消息头与消息体分离
    /// </summary>
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    public interface AMD_MessageEndpoint_sendMessage : Ice.AMDCallback
    {
        /// <summary>
        /// ice_response indicates that
        /// the operation completed successfully.
        /// </summary>
        void ice_response(slice.Reply ret__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.0")]
    class _AMD_MessageEndpoint_sendMessage : IceInternal.IncomingAsync, AMD_MessageEndpoint_sendMessage
    {
        public _AMD_MessageEndpoint_sendMessage(IceInternal.Incoming inc) : base(inc)
        {
        }

        public void ice_response(slice.Reply ret__)
        {
            if(validateResponse__(true))
            {
                try
                {
                    IceInternal.BasicStream os__ = startWriteParams__(Ice.FormatType.DefaultFormat);
                    slice.Reply.write__(os__, ret__);
                    endWriteParams__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    exception__(ex__);
                    return;
                }
                response__();
            }
        }
    }
}
