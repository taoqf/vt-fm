//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     如果重新生成代码，将丢失对此文件所做的更改。
// </auto-generated>
//------------------------------------------------------------------------------
namespace Victop.Frame.ServerManagerCenter
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Reflection;
    using System.Text;

	/// <summary>
	/// 插件工厂
	/// </summary>
    internal class ServerFactory
	{
		/// <summary>
		/// 反射启动插件
        /// <param name="serverName">服务名称</param>
        /// <param name="serverPath">服务路径</param>
		/// </summary>
        internal static Assembly GetServerAssemblyByName(string serverName, string serverPath = "")
		{
            if (string.IsNullOrWhiteSpace(serverName))
            {
                return null;
            }
            if (string.IsNullOrWhiteSpace(serverPath))
            {
                serverPath = "Plugin";
            }
            serverName = string.Concat(serverName, ".dll");
            string filePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, serverPath, serverName);
            if (File.Exists(filePath))
            {
                byte[] fileBytes = LoadServerFile(filePath);
                Assembly assemblyLoad = AppDomain.CurrentDomain.Load(fileBytes);
                return assemblyLoad;
            }
            else
            {
                throw new Exception("插件不存在");
            }
		}

		/// <summary>
		/// 加载服务文件
        /// <param name="fileName">文件名称</param>
		/// </summary>
		private static byte[] LoadServerFile(string fileName)
		{
            FileInfo info = new FileInfo(fileName);
            if (!info.Exists)
            {
                return null;
            }
            FileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);
            byte[] buffer = new byte[(int)fs.Length];
            fs.Read(buffer, 0, buffer.Length);
            fs.Close();
            return buffer;
		}

	}
}

