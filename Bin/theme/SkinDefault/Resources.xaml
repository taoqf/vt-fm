<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  xmlns:controls = "clr-namespace:Victop.Wpf.Controls;assembly=Victop.Wpf.Controls"
  >
  <!--<Setter Property="AllowsTransparency" Value="true"/>-->
  <!--<Setter Property="Background" Value="Transparent"/>-->
  <!--<Setter Property="ResizeMode" Value="NoResize"/>-->
  <!--<Setter Property="WindowStyle" Value="None"/>-->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>
  
  <Style x:Key="WindowTitleGridStyle" TargetType="{x:Type  Grid}">
    <Setter Property="Background"  Value="{DynamicResource WindowTitleAreaBackground}"/>
    <Setter Property="Height" Value="60"/>
  </Style>

  <Style x:Key="ToolBarGridStyle" TargetType="{x:Type  Grid}">
    <Setter Property="Background"  Value="{DynamicResource ToolBarAreaBackground}"/>
    <Setter Property="Height" Value="70"/>
  </Style>

  <Style x:Key="TreeGridStyle" TargetType="{x:Type  Grid}">
    <Setter Property="Background"  Value="{DynamicResource TreeAreaBackground}"/>
  </Style>


  <Style x:Key="SearchGridStyle" TargetType="{x:Type  Grid}">
    <Setter Property="Background"  Value="{DynamicResource SearchAreaBackground}"/>
  </Style>

  <Style x:Key="PagingGridStyle" TargetType="{x:Type  Grid}">
    <Setter Property="Background"  Value="{DynamicResource PagingAreaBackground}"/>
  </Style>
  
  <Style x:Key="SelectedGridImage" TargetType="{x:Type  Grid}">
  <Setter Property="Background" >
      <Setter.Value>
        <ImageBrush ImageSource="indexSelected.png" />
      </Setter.Value>
    </Setter>
  </Style>

<Style x:Key="GridImage" TargetType="{x:Type Grid}">
    <Setter Property="Background" >
      <Setter.Value>
        <ImageBrush ImageSource="index.png" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="btnClear" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnDelete.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_300}"/>
  </Style>

  <Style x:Key="btnAdd" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnAdd.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_35}"/>
  </Style>

  <Style x:Key="btnCancel" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnCancel.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_3}"/>
  </Style>

  <Style x:Key="btnCancelAll" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnCancelAll.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_23}"/>
  </Style>

  <Style x:Key="btnDelete" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnDelete.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_22}"/>
  </Style>

  <Style x:Key="btnSave" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnSave.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_24}"/>
  </Style>

  <Style x:Key="btnSearch" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnSearch.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_25}"/>
  </Style>

  <Style x:Key="btnPrint" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnPrint.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_90}"/>
  </Style>

  <Style x:Key="btnCheckAll" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnCheckAll.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_95}"/>
  </Style>

  <Style x:Key="btnConfirm" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnConfirm.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_93}"/>
  </Style>


  <Style x:Key="btnDetailedList" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnDetailedList.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_91}"/>
  </Style>


  <Style x:Key="btnExecute" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnExecute.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_94}"/>
  </Style>

  <Style x:Key="btnNewBill" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnNewBill.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_92}"/>
  </Style>

  <Style x:Key="btnRefreshData" TargetType="{x:Type controls:VicButtonTopBottom}">
    <Setter Property="TopBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnRefreshData.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BottomContent" Value="{DynamicResource L_R_96}"/>
  </Style>

  <Style x:Key="btnAddBrotherNode" TargetType="{x:Type controls:VicButtonLeftRight}">
    <Setter Property="LeftBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnAddBrotherNode.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="RightContent" Value="{DynamicResource L_R_41}"/>
  </Style>

  <Style x:Key="btnAddChildNode" TargetType="{x:Type controls:VicButtonLeftRight}">
    <Setter Property="LeftBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnAddBrotherNode.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="RightContent" Value="{DynamicResource L_R_42}"/>
  </Style>

  <Style x:Key="btnDeleteNode" TargetType="{x:Type controls:VicButtonLeftRight}">
    <Setter Property="LeftBackground">
      <Setter.Value>
        <ImageBrush ImageSource="btnDeleteNode.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="RightContent" Value="{DynamicResource L_R_43}"/>
  </Style>

  <Style x:Key="ShadowWindow" TargetType="{x:Type Window}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Grid >
            <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    RadiusX="1" RadiusY="1">
              <Rectangle.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
              </Rectangle.Effect>
            </Rectangle>
            <Border Background="{TemplateBinding Background}"
                     BorderBrush="#024672"
                   BorderThickness="1"
                   Padding="{TemplateBinding Margin}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                   CornerRadius="0">
              <ContentPresenter />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="loginWindowStyle" TargetType="{x:Type Window}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="loginWindow.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="loginTopGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="loginTitle.png"/>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="loginMainGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="loginMain.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmTopGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="MainFrmTitle.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ThemesFrmTopGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="ThemesFrmTop.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LoginTopRightGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="LoginTopRightGrid.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LoginTopLeftGridStyle1" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="LoginTopLeftGrid1.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LoginTopLeftGridStyle2" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="LoginTopLeftGrid2.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="loginMainUserPhotoGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="UserPhoto.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LoginButtonStyle" TargetType="{x:Type controls:VicButtonImage}">
    <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
    <Setter Property="FontSize" Value="14"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
    <Setter Property="Foreground" Value="#676767"/>
    <Setter Property="Width" Value="129"/>
    <Setter Property="Height" Value="30"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="loginBtn.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmBottomGridStyle" TargetType="{x:Type Label}">
    <Setter Property="Foreground" Value="#828282"></Setter>
    <Setter Property="FontFamily" Value="SimSun"/>
    <Setter Property="FontSize" Value="12"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="Height" Value="27"></Setter>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
    <Setter Property="Padding" Value="15,0,0,0"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="BottomStatus.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ThemesFrmMainGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="ThemesFrmMainGrid.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmUserPictrueGridStyle" TargetType="{x:Type controls:VicButtonImage}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="UserPictrue.png"/>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="MainBtnDaysStyle" TargetType="{x:Type Image}">
    <Setter Property="Source" Value="btnDays.png">
    </Setter>
  </Style>

  <Style x:Key="MainFrmSearchGridStyle" TargetType="{x:Type Grid}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="GridSearch.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnChangeSkinStyle" TargetType="{x:Type Button}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="ChangeSkin.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush ImageSource="ChangeSkin.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="ChangeSkinMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="ChangeSkinMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnMiniStyle" TargetType="{x:Type Button}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="Mini.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush ImageSource="Mini.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="MiniMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="MiniMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnMaxiStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">

          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="Maxi.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="Maxi.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="MaxiMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="MaxiMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="btnRenewStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">

          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="btnRenew.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="btnRenew.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="btnRenewMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="btnRenewMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="Close.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="Close.png"/>
            </Themes:ButtonChrome.Background>

          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="CloseMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="CloseMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnSetStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Themes:ButtonChrome x:Name="Chrome" >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="Set.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="Set.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="SetMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="SetMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnLoginSetStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Themes:ButtonChrome x:Name="Chrome" >
            <Themes:ButtonChrome.OpacityMask>
              <ImageBrush  ImageSource="LoginSet.png"/>
            </Themes:ButtonChrome.OpacityMask>
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="LoginSet.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="LoginSetMouseOver.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="OpacityMask" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="LoginSetMouseOver.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnStretchStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">

          <Themes:ButtonChrome x:Name="Chrome"  >
            <Themes:ButtonChrome.Background>
              <ImageBrush  ImageSource="Stretch.png"/>
            </Themes:ButtonChrome.Background>
          </Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmLeftMenuStyle1st" TargetType="{x:Type Label}">
    <Setter Property="Foreground" Value="#435058"></Setter>
    <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
    <Setter Property="FontSize" Value="14"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="Height" Value="37"></Setter>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
    <Setter Property="Padding" Value="18,0,0,0"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="MainFrmLeftMenu1st.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="FontWeight"  Value="Bold"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmLeftMenuStyle2nd" TargetType="{x:Type RadioButton}">
    <Setter Property="Height" Value="30"></Setter>
    <Setter Property="FontFamily" Value="SimSun"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator x:Name="bulletDecorator">
            <BulletDecorator.Background>
              <ImageBrush ImageSource="UnSelected.png"/>
            </BulletDecorator.Background>
            <ContentPresenter HorizontalAlignment="Left" Margin="0,0,0,0" RecognizesAccessKey="True"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Background" TargetName="bulletDecorator">
                <Setter.Value>
                  <ImageBrush ImageSource="Selected.png"/>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" Value="White"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsChecked" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="bulletDecorator">
                <Setter.Value>
                  <ImageBrush ImageSource="MainFrmLeftMenu1st.png"/>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnChSkinBackGroudStyle" TargetType="{x:Type RadioButton}">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator RenderTransformOrigin="0.804,0.763"   x:Name="Chrome">
            <ContentPresenter VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,90,0,0"  RecognizesAccessKey="True"  Height="20" Width="203">
            </ContentPresenter>
            <BulletDecorator.Background>
              <ImageBrush ImageSource="index.png"/>
            </BulletDecorator.Background>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Background" TargetName="Chrome">
                <Setter.Value>
                  <ImageBrush ImageSource="indexSelected.png"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Chrome" >
                <Setter.Value>
                  <ImageBrush ImageSource="index.png" />
                </Setter.Value>
              </Setter>
              <Setter Property="Opacity" TargetName="Chrome" Value="0.7"/>
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainFrmRightMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontFamily" Value="SimSun"></Setter>
    <Setter Property="Height" Value="25"/>
    <Setter Property="Margin" Value="5,5,5,5"/>
    <Setter Property="Padding" Value="5,5,5,0"/>
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="MenuItemDefault.png" />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsFocused" Value="true">
        <Setter Property="Background"  >
          <Setter.Value>
            <ImageBrush ImageSource="MenuItemSelected.png" />
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground"  Value="White"/>
      </Trigger>

    </Style.Triggers>
  </Style>

  <Style x:Key="tblockAdvertisementStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="AdvertiseBack.png"/>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="AdvertiseBackMouseOver.png"/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btnMainFeedBackStyle" TargetType="{x:Type controls:VicButtonImage}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="btnMainFeedBack.png"/>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background">
          <Setter.Value>
            <ImageBrush ImageSource="btnMOMainFeedBack.png"/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btnSearchStyle" TargetType="{x:Type controls:VicButtonImage}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="Search.png"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btnMainShowSuspendStyle" TargetType="{x:Type controls:VicButtonImage}">
    <Setter Property="Background">
      <Setter.Value>
        <ImageBrush ImageSource="btnMainShowSuspend.png"/>
      </Setter.Value>
    </Setter>
  </Style>
  <!--滚动条样式-->

  <SolidColorBrush x:Key="StandardBorderBrush" Color="#d8e9f0" />
  <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
  <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
  <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
  <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#d8e9f0" />
  <SolidColorBrush x:Key="NormalBrush" Color="#d8e9f0" />
  <SolidColorBrush x:Key="NormalBorderBrush" Color="#d8e9f0" />
  <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#d8e9f0" />
  <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#d8e9f0" />
  <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
      StartPoint="0,0" EndPoint="1,0.001">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="White" Offset="0.0" />
        <GradientStop Color="White" Offset="0.6" />
        <GradientStop Color="#DDDDDD" Offset="1.2"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="StandardBrush"
      StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
  <LinearGradientBrush x:Key="PressedBrush"
      StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#BBB" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="0.1"/>
        <GradientStop Color="#EEE" Offset="0.9"/>
        <GradientStop Color="#FFF" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background"
              Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="VerticalScrollBar"
      TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="18"/>
        <RowDefinition Height="0.00001*"/>
        <RowDefinition MaxHeight="18"/>
      </Grid.RowDefinitions>
      <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
      <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
      <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="HorizontalScrollBar"
      TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="18"/>
        <ColumnDefinition Width="0.00001*"/>
        <ColumnDefinition MaxWidth="18"/>
      </Grid.ColumnDefinitions>
      <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
      <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
      <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
    </Grid>
  </ControlTemplate>
  <Style x:Key="MenuScrollBar" TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="11" />
        <Setter Property="Template"
            Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template"
            Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource MenuScrollBar}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource MenuScrollBar}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollContentPresenter Grid.Column="0"/>

            <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  Grid.Row="0"
            Grid.Column="1"/>
            <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
           
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--滚动条样式-->

</ResourceDictionary>