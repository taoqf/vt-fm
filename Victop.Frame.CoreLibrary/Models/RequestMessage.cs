//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     如果重新生成代码，将丢失对此文件所做的更改。
// </auto-generated>
//------------------------------------------------------------------------------
namespace Victop.Frame.CoreLibrary.Models
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	/// <summary>
	/// 请求消息体
	/// </summary>
	/// <remarks>请求消息体</remarks>
	public class RequestMessage
	{
        private string messageId;
		/// <summary>
		/// 消息标识
		/// </summary>
		public virtual string MessageId
		{
            get { return messageId; }
            set { messageId = value; }
		}
        private string fromId;
		/// <summary>
		/// 消息发起者
		/// </summary>
		public virtual string FromId
		{
            get { return fromId; }
            set { fromId = value; }
		}
        private string fromRole;
		/// <summary>
		/// 发起角色
		/// </summary>
		public virtual string FromRole
		{
            get { return fromRole; }
            set { fromRole = value; }
		}
        private string toId;
		/// <summary>
		/// 最终接收者
		/// </summary>
		public virtual string ToId
		{
            get { return toId; }
            set { toId = value; }
		}
        private string toRole;
		/// <summary>
		/// 最终接收者
		/// </summary>
		public virtual string ToRole
		{
            get { return toRole; }
            set { toRole = value; }
		}
        private string routerAddress;
		/// <summary>
		/// 路由地址
		/// </summary>
		public virtual string RouterAddress
		{
            get { return routerAddress; }
            set { routerAddress = value; }
		}
        private string targetAddress;
		/// <summary>
		/// 目标地址
		/// </summary>
		public virtual string TargetAddress
		{
            get { return targetAddress; }
            set { targetAddress = value; }
		}
        private string messageType;
		/// <summary>
		/// 消息类型
		/// </summary>
		public virtual string MessageType
		{
            get { return messageType; }
            set { messageType = value; }
		}
        private string messageContent;
		/// <summary>
		/// 消息内容
		/// </summary>
		public virtual string MessageContent
		{
            get { return messageContent; }
            set { messageContent = value; }
		}
        private string sessionId;
		/// <summary>
		/// 业务标识
		/// </summary>
		public virtual string SessionId
		{
            get { return sessionId; }
            set { sessionId = value; }
		}
        private string currentRecepitId;
		/// <summary>
		/// 当前接收者
		/// </summary>
		public virtual string CurrentRecepitId
		{
            get { return currentRecepitId; }
            set { currentRecepitId = value; }
		}
        private string currentSenderId;
		/// <summary>
		/// 当前发送者
		/// </summary>
		public virtual string CurrentSenderId
		{
            get { return currentSenderId; }
            set { currentSenderId = value; }
		}
        private string replyToId;
        /// <summary>
        /// 异步回应消息Id
        /// </summary>
        public virtual string ReplyToId
        {
            get { return replyToId; }
            set { replyToId = value; }
        }
        private string messageControl;
        /// <summary>
        /// 消息控制字段
        /// </summary>
        public virtual string MessageControl
        {
            get { return messageControl; }
            set { messageControl = value; }
        }
        /// <summary>
        /// 设定路由地址和端口，端口输入空则使用默认值9527，如果不使用路由，此处不设定，或将地址设为null
        /// </summary>
        /// <param name="routerAddress"></param>
        /// <param name="port"></param>
        public void SetRouterAddress(string routerAddress, string port)
        {
            if (String.IsNullOrWhiteSpace(routerAddress))
            {
                this.routerAddress = "";
            }
            else
            {
                string portTemp = "";
                if (port != "" && Trim(port).Length > 0)
                {
                    portTemp = port;
                }
                this.routerAddress = "VictopGlacier2/router:tcp -h " + routerAddress + " -p " + portTemp;
            }
        }
        /// <summary>
        /// 设定接收服务器地址，端口输入空则使用默认值10000，如果是回调发送，此处不设定，或将地址设为null
        /// </summary>
        /// <param name="receiptAddress"></param>
        /// <param name="port"></param>
        public void SetTargetAddress(string targetAddress, string port)
        {
            if (String.IsNullOrWhiteSpace(targetAddress))
            {
                this.targetAddress = "";
            }
            else
            {
                string targetPortTemp = "";
                if (port != "" && Trim(port).Length > 0)
                {
                    targetPortTemp = " -p " + port;
                }
                this.targetAddress = "onmessage:tcp -h " + targetAddress
                    + targetPortTemp;
            }
        }
        /// <summary>
        /// 过滤字符串中头尾的换行与空格
        /// </summary>
        /// <param name="str">需要过滤的字符串</param>
        /// <returns>过滤之后的字符串</returns>
        public string Trim(string str)
        {
            if (!String.IsNullOrWhiteSpace(str))
            {
                str = str.TrimStart('\n');
                str = str.TrimEnd('\n');
                str = str.TrimStart('\r');
                str = str.TrimEnd('\r');
                str = str.TrimStart('\t');
                str = str.TrimEnd('\t');
                str = str.Trim();
            }

            return str;
        }
	}
}

